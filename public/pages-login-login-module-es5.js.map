{"version":3,"sources":["webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.component.scss","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.module.ts"],"names":["LoginComponent","fb","router","store","snackBar","auth","hide","loginForm","group","username","compose","required","minLength","password","rememberMe","pipe","subscribe","token","checkUsers","user","error","handleError","length","open","split","panelClass","verticalPosition","duration","saveAuthToken","saveUser","navigate","values","valid","value","dispatch","selector","template","routes","path","component","pathMatch","LoginModule","declarations","imports","forChild"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n  <div class=\\\"theme-container\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-3\\\">\\r\\n      <mat-card [style.max-width.px]=\\\"500\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"uppercase\\\">Sign In</h1>\\r\\n          <a mat-button routerLink=\\\"/register\\\" color=\\\"accent\\\" class=\\\"w-100\\\">Don't have an account? Sign up now!</a>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">person</mat-icon>\\r\\n            <mat-label>Username</mat-label>\\r\\n            <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.username.errors?.required\\\">Username is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.username.hasError('minlength')\\\">Username isn't long enough, minimum of\\r\\n              6 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n            <mat-label>Password</mat-label>\\r\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required\\r\\n              [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of\\r\\n              6 characters</mat-error>\\r\\n            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n          <mat-slide-toggle formControlName=\\\"rememberMe\\\" class=\\\"my-2\\\">Keep me signed in</mat-slide-toggle>\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" class=\\\"uppercase\\\" type=\\\"submit\\\">\\r\\n              Sign to My Account\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-button>\\r\\n            <mat-icon class=\\\"text-muted\\\">vpn_key</mat-icon>\\r\\n            <span class=\\\"mx-1\\\">Reset Password</span>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\";","export default \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgcGFkZGluZzogN3B4IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwOyAgICBcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { selectAllUser, selectUserError, selectCurrentUser, selectUserToken } from '../register/store/user.selectors';\nimport { User } from '../register/models/user';\nimport { UserLoginAction } from '../register/store/user.actions';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../register/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public hide = true;\n  constructor(public fb: FormBuilder, public router: Router, private store: Store<GlobalState>, public snackBar: MatSnackBar, private auth: AuthService) {\n\n   }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      rememberMe: false\n    });\n    this.store.pipe(select(selectUserToken)).subscribe(token => this.checkUsers(null, token) );\n    this.store.pipe(select(selectCurrentUser)).subscribe(user => this.checkUsers(user, null) );\n    this.store.pipe(select(selectUserError)).subscribe(error => this.handleError(error));\n  }\n\n  private handleError(error: string){\n    if (error.length > 0) {\n        this.snackBar.open(error.split('-')[0], '', { panelClass: 'success', verticalPosition: 'bottom', duration: 3000 });\n    }\n  }\n\n  private checkUsers(user?: User, token?: string){\n    if (token){\n      this.auth.saveAuthToken(token);\n    }else if (user){\n      this.auth.saveUser(user, null);\n      this.router.navigate(['/account/property-groups']);\n    }\n  }\n\n  public onLoginFormSubmit(values: Object): void {\n    if (this.loginForm.valid) {\n      const user: User =  this.loginForm.value as  User;\n      this.store.dispatch(new UserLoginAction(user));\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"]}