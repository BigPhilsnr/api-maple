{"version":3,"sources":["./src/app/pages/submit-property/submit-property.component.html","./src/app/pages/submit-property/submit-property.component.scss","./src/app/pages/submit-property/submit-property.component.ts","./src/app/pages/submit-property/submit-property.module.ts"],"names":[],"mappings":"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","file":"default~pages-account-account-module~pages-submit-property-submit-property-module-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\n    <div class=\\\"theme-container\\\">\\n  \\n      <div ngClass.lt-lg=\\\"p-0\\\" [formGroup]=\\\"submitForm\\\">\\n  \\n        <mat-horizontal-stepper #horizontalStepper linear=\\\"true\\\" class=\\\"submit-property\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('basic')\\\" label=\\\"Basic\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"basic\\\" fxLayout=\\\"row wrap\\\">\\n\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Basic</h1>\\n                      </div>\\n                              \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Title</mat-label>\\n                            <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" required autocomplete=\\\"off\\\">\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].title.errors?.required\\\">Title is required</mat-error>\\n                        </mat-form-field>\\n                      </div>  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Description</mat-label> \\n                            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" rows=\\\"7\\\"></textarea> \\n                        </mat-form-field> \\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Price Rent</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Enter rent price\\\" formControlName=\\\"priceDollar\\\" autocomplete=\\\"off\\\"> \\n                        </mat-form-field>\\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Price Sale</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Enter sale price\\\" formControlName=\\\"priceEuro\\\" autocomplete=\\\"off\\\" > \\n                        </mat-form-field>\\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Property Type</mat-label> \\n                            <mat-select placeholder=\\\"Select Property Type\\\" formControlName=\\\"propertyType\\\" required>\\n                                <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType\\\">\\n                                    {{propertyType.name}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].propertyType.errors?.required\\\">Property Type is required</mat-error>                               \\n                        </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Property Status</mat-label>\\n                            <mat-select placeholder=\\\"Select Property Status\\\" formControlName=\\\"propertyStatus\\\" multiple>\\n                                <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus\\\">\\n                                    {{propertyStatus.name}}\\n                                </mat-option>\\n                            </mat-select>                             \\n                        </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Gallery</span><span class=\\\"text-muted mx-3\\\">(max 8 images)</span></p>  \\n                          <input-file formControlName=\\\"gallery\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"  [linkEnabled]=\\\"true\\\" ></input-file>  \\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"end center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div> \\n                  \\n                  </form>\\n               \\n              </div>\\n            </mat-step>\\n            \\n            <mat-step [stepControl]=\\\"submitForm.get('address')\\\" label=\\\"Address\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\n            \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Address</h1>\\n                      </div>\\n\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>City</mat-label>\\n                            <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\n                              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">\\n                                {{city.name}}\\n                              </mat-option>\\n                            </mat-select> \\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\n                        </mat-form-field>\\n                      </div> \\n                                \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\n                            <mat-label>Location</mat-label>\\n                            <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\n                            <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\n                              <mat-icon>close</mat-icon>\\n                            </button>\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">Location is required</mat-error>   \\n                        </mat-form-field>\\n                      </div> \\n                    \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\n                          <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\n                              <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\n                          </agm-map>\\n                      </div>\\n                    \\n                     \\n                    \\n                      <!-- <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Zip Code</mat-label>\\n                            <input matInput placeholder=\\\"exp. 98104\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                    \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Neighborhood</mat-label>\\n                          <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\" multiple (selectionChange)=\\\"onSelectNeighborhood()\\\">\\n                            <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood\\\">\\n                              {{neighborhood.name}}\\n                            </mat-option>\\n                          </mat-select>   \\n                        </mat-form-field>\\n                      </div> \\n                    \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Street</mat-label>\\n                          <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" multiple> \\n                            <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street\\\">\\n                              {{street.name}}\\n                            </mat-option>\\n                          </mat-select>  \\n                        </mat-form-field>\\n                      </div>  -->\\n                    \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <mat-icon>navigate_before</mat-icon>\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                        </button>\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div>  \\n                    \\n                  </form>\\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('additional')\\\" label=\\\"Additional\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\n    \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Additional</h1>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Bedrooms</mat-label>\\n                            <input matInput placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Bathrooms</mat-label>\\n                            <input matInput placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Garages</mat-label>\\n                            <input matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                      \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Area (ft²)</mat-label>\\n                            <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber  type=\\\"number\\\" >                  \\n                          </mat-form-field>\\n                      </div>\\n                      \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Year Built</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Year Built\\\" autocomplete=\\\"off\\\" formControlName=\\\"yearBuilt\\\" onlyNumber  type=\\\"number\\\"   maxlength=\\\"4\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\n                          <p class=\\\"uppercase m-2 fw-500\\\">Features</p> \\n                          <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\n                              <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\" class=\\\"p-2\\\">\\n                                  <mat-checkbox formControlName=\\\"selected\\\">{{features[i].name}}</mat-checkbox>                         \\n                              </div>\\n                          </div>\\n                      </div>\\n                  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <mat-icon>navigate_before</mat-icon>\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                        </button>\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div>  \\n            \\n                  \\n                  </form>\\n                  \\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('media')\\\" label=\\\"Media\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\n                   \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Videos</span><span class=\\\"text-muted mx-3\\\">(video link to .mp4)</span></p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addVideo()\\\" matTooltip=\\\"Add New Video\\\" matTooltipPosition=\\\"after\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"videos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].videos['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Video name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Link</mat-label>\\n                                      <input matInput placeholder=\\\"Link to video\\\" formControlName=\\\"link\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>                                                 \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVideo(i)\\\" matTooltip=\\\"Delete Video\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>                            \\n                          </div>        \\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"uppercase fw-500 mb-0\\\">Plans</p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addPlan()\\\" matTooltip=\\\"Add New Plan\\\" matTooltipPosition=\\\"after\\\" class=\\\"mx-3\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"plans\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].plans['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Plan name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Desc</mat-label>\\n                                      <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field> \\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Area (ft²)</mat-label>\\n                                      <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Rooms</mat-label>\\n                                      <input matInput placeholder=\\\"Rooms\\\" formControlName=\\\"rooms\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Baths</mat-label>\\n                                      <input matInput placeholder=\\\"Baths\\\" formControlName=\\\"baths\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">  \\n                                      <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\n                                  </div>                \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePlan(i)\\\" matTooltip=\\\"Delete Plan\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>  \\n                          </div>        \\n                      </div> \\n                  \\n                      \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"mb-0 uppercase fw-500\\\">Additional features</p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add New Feature\\\" matTooltipPosition=\\\"after\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"additionalFeatures\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].additionalFeatures['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Feature name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Value</mat-label>\\n                                      <input matInput placeholder=\\\"Feature value\\\" formControlName=\\\"value\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>                                                 \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteFeature(i)\\\" matTooltip=\\\"Delete Feature\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>                            \\n                          </div>        \\n                      </div>\\n                  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\n                          <mat-slide-toggle formControlName=\\\"featured\\\">Featured</mat-slide-toggle>\\n                      </div>\\n                     \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                              <mat-icon>navigate_before</mat-icon>\\n                              <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                          </button>\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\" (click)=\\\"uploadProperty()\\\">\\n                              <span class=\\\"mx-1 uppercase\\\">Submit</span>                    \\n                              <mat-icon>navigate_next</mat-icon>\\n                          </button> \\n                      </div> \\n                   \\n                  \\n                  </form>\\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step label=\\\"Confirmation\\\">\\n              <div class=\\\"step-content\\\">\\n                \\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-5 text-center\\\"> \\n                    <button mat-fab color=\\\"primary\\\"><mat-icon>check</mat-icon></button>\\n                    <h2 class=\\\"mt-3 uppercase\\\">Congratulation!</h2>\\n                    <h2 class=\\\"my-3\\\">Your property <span class=\\\"primary-color\\\">\\\"{{submitForm.get('basic')['controls'].title.value}}\\\"</span> has been submitted</h2>\\n                    <p class=\\\"text-muted\\\">Thank you we will review you request and get back to you within 24hours, feel free to add more properties.</p>\\n                  </div>\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reset()\\\" type=\\\"button\\\">Return to submit new property</button>       \\n                  </div>\\n\\n              </div> \\n            </mat-step>\\n\\n        </mat-horizontal-stepper>\\n\\n      </div>\\n\\n\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N1Ym1pdC1wcm9wZXJ0eS9zdWJtaXQtcHJvcGVydHkuY29tcG9uZW50LnNjc3MifQ== */\";","/// <reference types=\"@types/googlemaps\" />\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MatStepper } from '@angular/material/stepper';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { AppService } from 'src/app/app.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { PropertyInput} from '../properties/models/property.input';\nimport { PropertyLoad, Area} from '../properties/models/property.load';\nimport { Property, Price } from 'src/app/app.models';\nimport { PropertyLoadAction, PropertyInsertAction } from '../properties/store/property.actions';\nimport { Store } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-submit-property',\n  templateUrl: './submit-property.component.html',\n  styleUrls: ['./submit-property.component.scss']\n})\nexport class SubmitPropertyComponent implements OnInit {\n  @ViewChild('horizontalStepper') horizontalStepper: MatStepper;\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef;\n  public submitForm: FormGroup;\n  public features = [];\n  public propertyTypes = [];\n  public propertyStatuses = [];\n  public cities = [];\n  public neighborhoods = [];\n  public streets = [];\n  public lat = 40.678178;\n  public lng = -73.944158;\n  public zoom = 12;\n  public pgroupId = '';\n\n  constructor(public appService: AppService,\n              private fb: FormBuilder,\n              private mapsAPILoader: MapsAPILoader,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              public store: Store<GlobalState>,\n              private ngZone: NgZone) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.pgroupId =  params.id;\n      if (!params.id){\n        this.router.navigateByUrl('/');\n      }\n    });\n    this.features = this.appService.getFeatures();\n    this.propertyTypes = this.appService.getPropertyTypes();\n    this.propertyStatuses = this.appService.getPropertyStatuses();\n    this.cities = this.appService.getCities();\n    this.neighborhoods = this.appService.getNeighborhoods();\n    this.streets = this.appService.getStreets();\n\n    this.submitForm = this.fb.group({\n      basic: this.fb.group({\n        title: [null, Validators.required],\n        desc: null,\n        priceDollar: null,\n        priceEuro: null,\n        propertyType: [null, Validators.required],\n        propertyStatus: null,\n        gallery: null\n      }),\n      address: this.fb.group({\n        location: ['', Validators.required],\n        city: ['', Validators.required],\n        zipCode: '',\n        neighborhood: '',\n        street: '',\n        lat: '',\n         lng: ''\n      }),\n      additional: this.fb.group({\n        bedrooms: '',\n        bathrooms: '',\n        garages: '',\n        area: '',\n        yearBuilt: '',\n        features: this.buildFeatures()\n      }),\n      media: this.fb.group({\n        videos: this.fb.array([ this.createVideo() ]),\n        plans: this.fb.array([ this.createPlan() ]),\n        additionalFeatures: this.fb.array([ this.createFeature() ]),\n        featured: false\n      })\n    });\n\n    this.setCurrentPosition();\n    this.placesAutocomplete();\n\n  }\n\n\n  public onSelectionChange(e: any){\n    if (e.selectedIndex == 4){\n      this.horizontalStepper._steps.forEach(step => step.editable = false);\n      console.log(this.submitForm.value);\n    }\n  }\n  public reset(){\n    this.horizontalStepper.reset();\n\n    const videos =  this.submitForm.controls.media.get('videos') as FormArray;\n    while (videos.length > 1) {\n      videos.removeAt(0);\n    }\n    const plans =  this.submitForm.controls.media.get('plans') as FormArray;\n    while (plans.length > 1) {\n      plans.removeAt(0);\n    }\n    const additionalFeatures =  this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    while (additionalFeatures.length > 1) {\n      additionalFeatures.removeAt(0);\n    }\n\n    this.submitForm.reset({\n      additional: {\n        features: this.features\n      },\n      media: {\n        featured: false\n      }\n    });\n\n  }\n\n  // -------------------- Address ---------------------------\n  public onSelectCity(){\n    this.submitForm.controls.address.get('neighborhood').setValue(null, {emitEvent: false});\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\n  }\n  public onSelectNeighborhood(){\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\n  }\n\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n  private placesAutocomplete(){\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.addressAutocomplete.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          this.lat = place.geometry.location.lat();\n          this.lng = place.geometry.location.lng();\n          this.getAddress();\n        });\n      });\n    });\n  }\n\n  // public getAddress(){\n  //   this.mapsAPILoader.load().then(() => {\n  //     let geocoder = new google.maps.Geocoder();\n  //     let latlng = new google.maps.LatLng(this.lat, this.lng);\n  //     geocoder.geocode({'location': latlng}, (results, status) => {\n  //       if(status === google.maps.GeocoderStatus.OK) {\n  //         console.log(results);\n  //         //this.addresstext.nativeElement.focus();\n  //         let address = results[0].formatted_address;\n  //         this.submitForm.controls.location.setValue(address);\n  //         this.setAddresses(results[0]);\n  //       }\n  //     });\n  //   });\n  // }\n\n  public getAddress(){\n    this.appService.getAddress(this.lat, this.lng).subscribe(response => {\n      const responseResult: any = response;\n      console.log(response);\n      if (responseResult.results.length){\n        const address = responseResult.results[0].formatted_address;\n        this.submitForm.controls.address.get('location').setValue(address);\n        this.setAddresses(responseResult.results[0]);\n      }\n    });\n  }\n  public onMapClick(e: any){\n    this.lat = e.coords.lat;\n    this.lng = e.coords.lng;\n    this.submitForm.controls.address.get('lat').setValue(this.lat);\n    this.submitForm.controls.address.get('lng').setValue(this.lng);\n    this.getAddress();\n  }\n  public onMarkerClick(e: any){\n    console.log(e);\n  }\n\n  public setAddresses(result){\n    this.submitForm.controls.address.get('city').setValue(null);\n    this.submitForm.controls.address.get('zipCode').setValue(null);\n    this.submitForm.controls.address.get('street').setValue(null);\n\n    let newCity, newStreet, newNeighborhood;\n\n    result.address_components.forEach(item => {\n      if (item.types.indexOf('locality') > -1){\n        if (this.cities.filter(city => city.name == item.long_name)[0]){\n          newCity = this.cities.filter(city => city.name == item.long_name)[0];\n        }\n        else{\n          newCity = { id: this.cities.length + 1, name: item.long_name };\n          this.cities.push(newCity);\n        }\n        this.submitForm.controls.address.get('city').setValue(newCity);\n      }\n      if (item.types.indexOf('postal_code') > -1){\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name);\n      }\n    });\n\n    if (!newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('administrative_area_level_1') > -1){\n          if (this.cities.filter(city => city.name == item.long_name)[0]){\n            newCity = this.cities.filter(city => city.name == item.long_name)[0];\n          }\n          else{\n            newCity = {\n              id: this.cities.length + 1,\n              name: item.long_name\n            };\n            this.cities.push(newCity);\n          }\n          this.submitForm.controls.address.get('city').setValue(newCity);\n        }\n      });\n    }\n\n    if (newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('neighborhood') > -1){\n          const neighborhood = this.neighborhoods.filter(n => n.name == item.long_name && n.cityId == newCity.id)[0];\n          if (neighborhood){\n            newNeighborhood = neighborhood;\n          }\n          else{\n            newNeighborhood = {\n              id: this.neighborhoods.length + 1,\n              name: item.long_name,\n              cityId: newCity.id\n            };\n            this.neighborhoods.push(newNeighborhood);\n          }\n          this.neighborhoods = [...this.neighborhoods];\n          this.submitForm.controls.address.get('neighborhood').setValue([newNeighborhood]);\n        }\n      });\n    }\n\n    if (newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('route') > -1){\n          if (this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0]){\n            newStreet = this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0];\n          }\n          else{\n            newStreet = {\n              id: this.streets.length + 1,\n              name: item.long_name,\n              cityId: newCity.id,\n              neighborhoodId: (newNeighborhood) ? newNeighborhood.id : null\n            };\n            this.streets.push(newStreet);\n          }\n          this.streets = [...this.streets];\n          this.submitForm.controls.address.get('street').setValue([newStreet]);\n        }\n      });\n    }\n\n  }\n\n\n  // -------------------- Additional ---------------------------\n  public buildFeatures() {\n    const arr = this.features.map(feature => {\n      return this.fb.group({\n        id: feature.id,\n        name: feature.name,\n        selected: feature.selected\n      });\n    });\n    return this.fb.array(arr);\n  }\n\n\n\n  // -------------------- Media ---------------------------\n  public createVideo(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      link: null\n    });\n  }\n  public addVideo(): void {\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\n    videos.push(this.createVideo());\n  }\n  public deleteVideo(index) {\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\n    videos.removeAt(index);\n  }\n\n  public createPlan(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      desc: null,\n      area: null,\n      rooms: null,\n      baths: null,\n      image: null\n    });\n  }\n  public addPlan(): void {\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\n    plans.push(this.createPlan());\n  }\n  public deletePlan(index) {\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\n    plans.removeAt(index);\n  }\n\n\n  public createFeature(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      value: null\n    });\n  }\n  public addFeature(): void {\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    features.push(this.createFeature());\n  }\n  public deleteFeature(index) {\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    features.removeAt(index);\n  }\n\n  public uploadProperty(){\n    const propertyInput: PropertyInput = this.submitForm.value;\n    propertyInput.pgroup = this.pgroupId;\n    this.store.dispatch(new PropertyInsertAction(propertyInput));\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AgmCoreModule } from '@agm/core';\nimport { InputFileModule } from 'ngx-input-file';\nimport { SubmitPropertyComponent } from './submit-property.component';\nimport { AuthGuard } from '../register/services/auth.guard';\n\nexport const routes = [\n  { path: '', component: SubmitPropertyComponent, pathMatch: 'full' , canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [SubmitPropertyComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    AgmCoreModule,\n    InputFileModule\n  ]\n})\nexport class SubmitPropertyModule { }\n"],"sourceRoot":"webpack:///"}