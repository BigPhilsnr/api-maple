{"version":3,"sources":["webpack:///src/app/pages/submit-property/submit-property.component.html","webpack:///src/app/pages/submit-property/submit-property.component.scss","webpack:///src/app/pages/submit-property/submit-property.component.ts","webpack:///src/app/pages/submit-property/submit-property.module.ts"],"names":["SubmitPropertyComponent","appService","fb","mapsAPILoader","activatedRoute","router","store","ngZone","features","propertyTypes","propertyStatuses","cities","neighborhoods","streets","lat","lng","zoom","pgroupId","params","subscribe","id","navigateByUrl","getFeatures","getPropertyTypes","getPropertyStatuses","getCities","getNeighborhoods","getStreets","submitForm","group","basic","title","required","desc","priceDollar","priceEuro","propertyType","propertyStatus","gallery","address","location","city","zipCode","neighborhood","street","additional","bedrooms","bathrooms","garages","area","yearBuilt","buildFeatures","media","videos","array","createVideo","plans","createPlan","additionalFeatures","createFeature","featured","setCurrentPosition","placesAutocomplete","e","selectedIndex","horizontalStepper","_steps","forEach","step","editable","console","log","value","reset","controls","get","length","removeAt","setValue","emitEvent","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","load","then","autocomplete","google","maps","places","Autocomplete","addressAutocomplete","nativeElement","types","addListener","run","place","getPlace","geometry","undefined","getAddress","response","responseResult","results","formatted_address","setAddresses","result","newCity","newStreet","newNeighborhood","address_components","item","indexOf","filter","name","long_name","push","n","cityId","neighborhoodId","arr","map","feature","selected","link","index","rooms","baths","image","propertyInput","pgroup","dispatch","selector","template","routes","path","component","pathMatch","canActivate","SubmitPropertyModule","declarations","imports","forChild"],"mappings":"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","file":"default~pages-account-account-module~pages-submit-property-submit-property-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\n    <div class=\\\"theme-container\\\">\\n  \\n      <div ngClass.lt-lg=\\\"p-0\\\" [formGroup]=\\\"submitForm\\\">\\n  \\n        <mat-horizontal-stepper #horizontalStepper linear=\\\"true\\\" class=\\\"submit-property\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('basic')\\\" label=\\\"Basic\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"basic\\\" fxLayout=\\\"row wrap\\\">\\n\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Basic</h1>\\n                      </div>\\n                              \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Title</mat-label>\\n                            <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" required autocomplete=\\\"off\\\">\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].title.errors?.required\\\">Title is required</mat-error>\\n                        </mat-form-field>\\n                      </div>  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Description</mat-label> \\n                            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" rows=\\\"7\\\"></textarea> \\n                        </mat-form-field> \\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Price Rent</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Enter rent price\\\" formControlName=\\\"priceDollar\\\" autocomplete=\\\"off\\\"> \\n                        </mat-form-field>\\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Price Sale</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Enter sale price\\\" formControlName=\\\"priceEuro\\\" autocomplete=\\\"off\\\" > \\n                        </mat-form-field>\\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Property Type</mat-label> \\n                            <mat-select placeholder=\\\"Select Property Type\\\" formControlName=\\\"propertyType\\\" required>\\n                                <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType\\\">\\n                                    {{propertyType.name}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].propertyType.errors?.required\\\">Property Type is required</mat-error>                               \\n                        </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Property Status</mat-label>\\n                            <mat-select placeholder=\\\"Select Property Status\\\" formControlName=\\\"propertyStatus\\\" multiple>\\n                                <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus\\\">\\n                                    {{propertyStatus.name}}\\n                                </mat-option>\\n                            </mat-select>                             \\n                        </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Gallery</span><span class=\\\"text-muted mx-3\\\">(max 8 images)</span></p>  \\n                          <input-file formControlName=\\\"gallery\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"  [linkEnabled]=\\\"true\\\" ></input-file>  \\n                      </div> \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"end center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div> \\n                  \\n                  </form>\\n               \\n              </div>\\n            </mat-step>\\n            \\n            <mat-step [stepControl]=\\\"submitForm.get('address')\\\" label=\\\"Address\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\n            \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Address</h1>\\n                      </div>\\n\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>City</mat-label>\\n                            <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\n                              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">\\n                                {{city.name}}\\n                              </mat-option>\\n                            </mat-select> \\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\n                        </mat-form-field>\\n                      </div> \\n                                \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\n                            <mat-label>Location</mat-label>\\n                            <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\n                            <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\n                              <mat-icon>close</mat-icon>\\n                            </button>\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">Location is required</mat-error>   \\n                        </mat-form-field>\\n                      </div> \\n                    \\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\n                          <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\n                              <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\n                          </agm-map>\\n                      </div>\\n                    \\n                     \\n                    \\n                      <!-- <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Zip Code</mat-label>\\n                            <input matInput placeholder=\\\"exp. 98104\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                    \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Neighborhood</mat-label>\\n                          <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\" multiple (selectionChange)=\\\"onSelectNeighborhood()\\\">\\n                            <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood\\\">\\n                              {{neighborhood.name}}\\n                            </mat-option>\\n                          </mat-select>   \\n                        </mat-form-field>\\n                      </div> \\n                    \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Street</mat-label>\\n                          <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" multiple> \\n                            <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street\\\">\\n                              {{street.name}}\\n                            </mat-option>\\n                          </mat-select>  \\n                        </mat-form-field>\\n                      </div>  -->\\n                    \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <mat-icon>navigate_before</mat-icon>\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                        </button>\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div>  \\n                    \\n                  </form>\\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('additional')\\\" label=\\\"Additional\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\n    \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Additional</h1>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Bedrooms</mat-label>\\n                            <input matInput placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Bathrooms</mat-label>\\n                            <input matInput placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Garages</mat-label>\\n                            <input matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber  type=\\\"number\\\"  maxlength=\\\"2\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                      \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Area (ft²)</mat-label>\\n                            <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber  type=\\\"number\\\" >                  \\n                          </mat-form-field>\\n                      </div>\\n                      \\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Year Built</mat-label>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Year Built\\\" autocomplete=\\\"off\\\" formControlName=\\\"yearBuilt\\\" onlyNumber  type=\\\"number\\\"   maxlength=\\\"4\\\">                  \\n                          </mat-form-field>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\n                          <p class=\\\"uppercase m-2 fw-500\\\">Features</p> \\n                          <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\n                              <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\" class=\\\"p-2\\\">\\n                                  <mat-checkbox formControlName=\\\"selected\\\">{{features[i].name}}</mat-checkbox>                         \\n                              </div>\\n                          </div>\\n                      </div>\\n                  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <mat-icon>navigate_before</mat-icon>\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                        </button>\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\n                          <mat-icon>navigate_next</mat-icon>\\n                        </button> \\n                      </div>  \\n            \\n                  \\n                  </form>\\n                  \\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step [stepControl]=\\\"submitForm.get('media')\\\" label=\\\"Media\\\">\\n              <div class=\\\"step-content\\\">\\n\\n                  <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\n                   \\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\n                        <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Videos</span><span class=\\\"text-muted mx-3\\\">(video link to .mp4)</span></p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addVideo()\\\" matTooltip=\\\"Add New Video\\\" matTooltipPosition=\\\"after\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"videos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].videos['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Video name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Link</mat-label>\\n                                      <input matInput placeholder=\\\"Link to video\\\" formControlName=\\\"link\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>                                                 \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVideo(i)\\\" matTooltip=\\\"Delete Video\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>                            \\n                          </div>        \\n                      </div>\\n                  \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"uppercase fw-500 mb-0\\\">Plans</p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addPlan()\\\" matTooltip=\\\"Add New Plan\\\" matTooltipPosition=\\\"after\\\" class=\\\"mx-3\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"plans\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].plans['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Plan name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Desc</mat-label>\\n                                      <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field> \\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Area (ft²)</mat-label>\\n                                      <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Rooms</mat-label>\\n                                      <input matInput placeholder=\\\"Rooms\\\" formControlName=\\\"rooms\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Baths</mat-label>\\n                                      <input matInput placeholder=\\\"Baths\\\" formControlName=\\\"baths\\\" autocomplete=\\\"off\\\" onlyNumber  type=\\\"number\\\" >     \\n                                  </mat-form-field>\\n                                  <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">  \\n                                      <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\n                                  </div>                \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePlan(i)\\\" matTooltip=\\\"Delete Plan\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>  \\n                          </div>        \\n                      </div> \\n                  \\n                      \\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\n                          <p class=\\\"mb-0 uppercase fw-500\\\">Additional features</p>                            \\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add New Feature\\\" matTooltipPosition=\\\"after\\\">\\n                              <mat-icon>add_circle</mat-icon>\\n                          </button>\\n                      </div> \\n                      <div formArrayName=\\\"additionalFeatures\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].additionalFeatures['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Name</mat-label>\\n                                      <input matInput placeholder=\\\"Feature name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\n                                      <mat-label>Value</mat-label>\\n                                      <input matInput placeholder=\\\"Feature value\\\" formControlName=\\\"value\\\" autocomplete=\\\"off\\\">     \\n                                  </mat-form-field>                                                 \\n                              </div>\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteFeature(i)\\\" matTooltip=\\\"Delete Feature\\\">\\n                                      <mat-icon>cancel</mat-icon>\\n                                  </button>\\n                              </div>                            \\n                          </div>        \\n                      </div>\\n                  \\n                  \\n                      <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\n                          <mat-slide-toggle formControlName=\\\"featured\\\">Featured</mat-slide-toggle>\\n                      </div>\\n                     \\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                              <mat-icon>navigate_before</mat-icon>\\n                              <span class=\\\"mx-1 uppercase\\\">Back</span>  \\n                          </button>\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\" (click)=\\\"uploadProperty()\\\">\\n                              <span class=\\\"mx-1 uppercase\\\">Submit</span>                    \\n                              <mat-icon>navigate_next</mat-icon>\\n                          </button> \\n                      </div> \\n                   \\n                  \\n                  </form>\\n                \\n              </div> \\n            </mat-step>\\n\\n            <mat-step label=\\\"Confirmation\\\">\\n              <div class=\\\"step-content\\\">\\n                \\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-5 text-center\\\"> \\n                    <button mat-fab color=\\\"primary\\\"><mat-icon>check</mat-icon></button>\\n                    <h2 class=\\\"mt-3 uppercase\\\">Congratulation!</h2>\\n                    <h2 class=\\\"my-3\\\">Your property <span class=\\\"primary-color\\\">\\\"{{submitForm.get('basic')['controls'].title.value}}\\\"</span> has been submitted</h2>\\n                    <p class=\\\"text-muted\\\">Thank you we will review you request and get back to you within 24hours, feel free to add more properties.</p>\\n                  </div>\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reset()\\\" type=\\\"button\\\">Return to submit new property</button>       \\n                  </div>\\n\\n              </div> \\n            </mat-step>\\n\\n        </mat-horizontal-stepper>\\n\\n      </div>\\n\\n\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N1Ym1pdC1wcm9wZXJ0eS9zdWJtaXQtcHJvcGVydHkuY29tcG9uZW50LnNjc3MifQ== */\";","/// <reference types=\"@types/googlemaps\" />\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MatStepper } from '@angular/material/stepper';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { AppService } from 'src/app/app.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { PropertyInput} from '../properties/models/property.input';\nimport { PropertyLoad, Area} from '../properties/models/property.load';\nimport { Property, Price } from 'src/app/app.models';\nimport { PropertyLoadAction, PropertyInsertAction } from '../properties/store/property.actions';\nimport { Store } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-submit-property',\n  templateUrl: './submit-property.component.html',\n  styleUrls: ['./submit-property.component.scss']\n})\nexport class SubmitPropertyComponent implements OnInit {\n  @ViewChild('horizontalStepper') horizontalStepper: MatStepper;\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef;\n  public submitForm: FormGroup;\n  public features = [];\n  public propertyTypes = [];\n  public propertyStatuses = [];\n  public cities = [];\n  public neighborhoods = [];\n  public streets = [];\n  public lat = 40.678178;\n  public lng = -73.944158;\n  public zoom = 12;\n  public pgroupId = '';\n\n  constructor(public appService: AppService,\n              private fb: FormBuilder,\n              private mapsAPILoader: MapsAPILoader,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              public store: Store<GlobalState>,\n              private ngZone: NgZone) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.pgroupId =  params.id;\n      if (!params.id){\n        this.router.navigateByUrl('/');\n      }\n    });\n    this.features = this.appService.getFeatures();\n    this.propertyTypes = this.appService.getPropertyTypes();\n    this.propertyStatuses = this.appService.getPropertyStatuses();\n    this.cities = this.appService.getCities();\n    this.neighborhoods = this.appService.getNeighborhoods();\n    this.streets = this.appService.getStreets();\n\n    this.submitForm = this.fb.group({\n      basic: this.fb.group({\n        title: [null, Validators.required],\n        desc: null,\n        priceDollar: null,\n        priceEuro: null,\n        propertyType: [null, Validators.required],\n        propertyStatus: null,\n        gallery: null\n      }),\n      address: this.fb.group({\n        location: ['', Validators.required],\n        city: ['', Validators.required],\n        zipCode: '',\n        neighborhood: '',\n        street: '',\n        lat: '',\n         lng: ''\n      }),\n      additional: this.fb.group({\n        bedrooms: '',\n        bathrooms: '',\n        garages: '',\n        area: '',\n        yearBuilt: '',\n        features: this.buildFeatures()\n      }),\n      media: this.fb.group({\n        videos: this.fb.array([ this.createVideo() ]),\n        plans: this.fb.array([ this.createPlan() ]),\n        additionalFeatures: this.fb.array([ this.createFeature() ]),\n        featured: false\n      })\n    });\n\n    this.setCurrentPosition();\n    this.placesAutocomplete();\n\n  }\n\n\n  public onSelectionChange(e: any){\n    if (e.selectedIndex == 4){\n      this.horizontalStepper._steps.forEach(step => step.editable = false);\n      console.log(this.submitForm.value);\n    }\n  }\n  public reset(){\n    this.horizontalStepper.reset();\n\n    const videos =  this.submitForm.controls.media.get('videos') as FormArray;\n    while (videos.length > 1) {\n      videos.removeAt(0);\n    }\n    const plans =  this.submitForm.controls.media.get('plans') as FormArray;\n    while (plans.length > 1) {\n      plans.removeAt(0);\n    }\n    const additionalFeatures =  this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    while (additionalFeatures.length > 1) {\n      additionalFeatures.removeAt(0);\n    }\n\n    this.submitForm.reset({\n      additional: {\n        features: this.features\n      },\n      media: {\n        featured: false\n      }\n    });\n\n  }\n\n  // -------------------- Address ---------------------------\n  public onSelectCity(){\n    this.submitForm.controls.address.get('neighborhood').setValue(null, {emitEvent: false});\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\n  }\n  public onSelectNeighborhood(){\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\n  }\n\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n  private placesAutocomplete(){\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.addressAutocomplete.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          this.lat = place.geometry.location.lat();\n          this.lng = place.geometry.location.lng();\n          this.getAddress();\n        });\n      });\n    });\n  }\n\n  // public getAddress(){\n  //   this.mapsAPILoader.load().then(() => {\n  //     let geocoder = new google.maps.Geocoder();\n  //     let latlng = new google.maps.LatLng(this.lat, this.lng);\n  //     geocoder.geocode({'location': latlng}, (results, status) => {\n  //       if(status === google.maps.GeocoderStatus.OK) {\n  //         console.log(results);\n  //         //this.addresstext.nativeElement.focus();\n  //         let address = results[0].formatted_address;\n  //         this.submitForm.controls.location.setValue(address);\n  //         this.setAddresses(results[0]);\n  //       }\n  //     });\n  //   });\n  // }\n\n  public getAddress(){\n    this.appService.getAddress(this.lat, this.lng).subscribe(response => {\n      const responseResult: any = response;\n      console.log(response);\n      if (responseResult.results.length){\n        const address = responseResult.results[0].formatted_address;\n        this.submitForm.controls.address.get('location').setValue(address);\n        this.setAddresses(responseResult.results[0]);\n      }\n    });\n  }\n  public onMapClick(e: any){\n    this.lat = e.coords.lat;\n    this.lng = e.coords.lng;\n    this.submitForm.controls.address.get('lat').setValue(this.lat);\n    this.submitForm.controls.address.get('lng').setValue(this.lng);\n    this.getAddress();\n  }\n  public onMarkerClick(e: any){\n    console.log(e);\n  }\n\n  public setAddresses(result){\n    this.submitForm.controls.address.get('city').setValue(null);\n    this.submitForm.controls.address.get('zipCode').setValue(null);\n    this.submitForm.controls.address.get('street').setValue(null);\n\n    let newCity, newStreet, newNeighborhood;\n\n    result.address_components.forEach(item => {\n      if (item.types.indexOf('locality') > -1){\n        if (this.cities.filter(city => city.name == item.long_name)[0]){\n          newCity = this.cities.filter(city => city.name == item.long_name)[0];\n        }\n        else{\n          newCity = { id: this.cities.length + 1, name: item.long_name };\n          this.cities.push(newCity);\n        }\n        this.submitForm.controls.address.get('city').setValue(newCity);\n      }\n      if (item.types.indexOf('postal_code') > -1){\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name);\n      }\n    });\n\n    if (!newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('administrative_area_level_1') > -1){\n          if (this.cities.filter(city => city.name == item.long_name)[0]){\n            newCity = this.cities.filter(city => city.name == item.long_name)[0];\n          }\n          else{\n            newCity = {\n              id: this.cities.length + 1,\n              name: item.long_name\n            };\n            this.cities.push(newCity);\n          }\n          this.submitForm.controls.address.get('city').setValue(newCity);\n        }\n      });\n    }\n\n    if (newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('neighborhood') > -1){\n          const neighborhood = this.neighborhoods.filter(n => n.name == item.long_name && n.cityId == newCity.id)[0];\n          if (neighborhood){\n            newNeighborhood = neighborhood;\n          }\n          else{\n            newNeighborhood = {\n              id: this.neighborhoods.length + 1,\n              name: item.long_name,\n              cityId: newCity.id\n            };\n            this.neighborhoods.push(newNeighborhood);\n          }\n          this.neighborhoods = [...this.neighborhoods];\n          this.submitForm.controls.address.get('neighborhood').setValue([newNeighborhood]);\n        }\n      });\n    }\n\n    if (newCity){\n      result.address_components.forEach(item => {\n        if (item.types.indexOf('route') > -1){\n          if (this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0]){\n            newStreet = this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0];\n          }\n          else{\n            newStreet = {\n              id: this.streets.length + 1,\n              name: item.long_name,\n              cityId: newCity.id,\n              neighborhoodId: (newNeighborhood) ? newNeighborhood.id : null\n            };\n            this.streets.push(newStreet);\n          }\n          this.streets = [...this.streets];\n          this.submitForm.controls.address.get('street').setValue([newStreet]);\n        }\n      });\n    }\n\n  }\n\n\n  // -------------------- Additional ---------------------------\n  public buildFeatures() {\n    const arr = this.features.map(feature => {\n      return this.fb.group({\n        id: feature.id,\n        name: feature.name,\n        selected: feature.selected\n      });\n    });\n    return this.fb.array(arr);\n  }\n\n\n\n  // -------------------- Media ---------------------------\n  public createVideo(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      link: null\n    });\n  }\n  public addVideo(): void {\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\n    videos.push(this.createVideo());\n  }\n  public deleteVideo(index) {\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\n    videos.removeAt(index);\n  }\n\n  public createPlan(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      desc: null,\n      area: null,\n      rooms: null,\n      baths: null,\n      image: null\n    });\n  }\n  public addPlan(): void {\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\n    plans.push(this.createPlan());\n  }\n  public deletePlan(index) {\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\n    plans.removeAt(index);\n  }\n\n\n  public createFeature(): FormGroup {\n    return this.fb.group({\n      id: null,\n      name: null,\n      value: null\n    });\n  }\n  public addFeature(): void {\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    features.push(this.createFeature());\n  }\n  public deleteFeature(index) {\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\n    features.removeAt(index);\n  }\n\n  public uploadProperty(){\n    const propertyInput: PropertyInput = this.submitForm.value;\n    propertyInput.pgroup = this.pgroupId;\n    this.store.dispatch(new PropertyInsertAction(propertyInput));\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AgmCoreModule } from '@agm/core';\nimport { InputFileModule } from 'ngx-input-file';\nimport { SubmitPropertyComponent } from './submit-property.component';\nimport { AuthGuard } from '../register/services/auth.guard';\n\nexport const routes = [\n  { path: '', component: SubmitPropertyComponent, pathMatch: 'full' , canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [SubmitPropertyComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    AgmCoreModule,\n    InputFileModule\n  ]\n})\nexport class SubmitPropertyModule { }\n"]}