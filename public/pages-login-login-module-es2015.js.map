{"version":3,"sources":["./src/app/pages/login/login.component.html","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n  <div class=\\\"theme-container\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-3\\\">\\r\\n      <mat-card [style.max-width.px]=\\\"500\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"uppercase\\\">Sign In</h1>\\r\\n          <a mat-button routerLink=\\\"/register\\\" color=\\\"accent\\\" class=\\\"w-100\\\">Don't have an account? Sign up now!</a>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">person</mat-icon>\\r\\n            <mat-label>Username</mat-label>\\r\\n            <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.username.errors?.required\\\">Username is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.username.hasError('minlength')\\\">Username isn't long enough, minimum of\\r\\n              6 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n            <mat-label>Password</mat-label>\\r\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required\\r\\n              [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of\\r\\n              6 characters</mat-error>\\r\\n            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n          <mat-slide-toggle formControlName=\\\"rememberMe\\\" class=\\\"my-2\\\">Keep me signed in</mat-slide-toggle>\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" class=\\\"uppercase\\\" type=\\\"submit\\\">\\r\\n              Sign to My Account\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-button>\\r\\n            <mat-icon class=\\\"text-muted\\\">vpn_key</mat-icon>\\r\\n            <span class=\\\"mx-1\\\">Reset Password</span>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\";","export default \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgcGFkZGluZzogN3B4IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwOyAgICBcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { selectAllUser, selectUserError, selectCurrentUser, selectUserToken } from '../register/store/user.selectors';\nimport { User } from '../register/models/user';\nimport { UserLoginAction } from '../register/store/user.actions';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../register/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public hide = true;\n  constructor(public fb: FormBuilder, public router: Router, private store: Store<GlobalState>, public snackBar: MatSnackBar, private auth: AuthService) {\n\n   }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      rememberMe: false\n    });\n    this.store.pipe(select(selectUserToken)).subscribe(token => this.checkUsers(null, token) );\n    this.store.pipe(select(selectCurrentUser)).subscribe(user => this.checkUsers(user, null) );\n    this.store.pipe(select(selectUserError)).subscribe(error => this.handleError(error));\n  }\n\n  private handleError(error: string){\n    if (error.length > 0) {\n        this.snackBar.open(error.split('-')[0], '', { panelClass: 'success', verticalPosition: 'bottom', duration: 3000 });\n    }\n  }\n\n  private checkUsers(user?: User, token?: string){\n    if (token){\n      this.auth.saveAuthToken(token);\n    }else if (user){\n      this.auth.saveUser(user, null);\n      this.router.navigate(['/account/property-groups']);\n    }\n  }\n\n  public onLoginFormSubmit(values: Object): void {\n    if (this.loginForm.valid) {\n      const user: User =  this.loginForm.value as  User;\n      this.store.dispatch(new UserLoginAction(user));\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}