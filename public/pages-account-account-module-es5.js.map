{"version":3,"sources":["webpack:///src/app/pages/account/account.component.html","webpack:///src/app/pages/account/dashboard/dashboard.component.html","webpack:///src/app/pages/account/edit-property/edit-property.component.html","webpack:///src/app/pages/account/favorites/favorites.component.html","webpack:///src/app/pages/account/featured/featured.component.html","webpack:///src/app/pages/account/housingunit/housingunit/add-hunit.component.html","webpack:///src/app/pages/account/housingunit/housingunit/housingunit.component.html","webpack:///src/app/pages/account/housingunit/housingunit/single-unit/single-unit.component.html","webpack:///src/app/pages/account/my-properties/my-properties.component.html","webpack:///src/app/pages/account/profile/profile.component.html","webpack:///src/app/pages/account/security/security.component.html","webpack:///src/app/pages/account/account.component.scss","webpack:///src/app/pages/account/account.component.ts","webpack:///src/app/pages/account/account.module.ts","webpack:///src/app/pages/account/dashboard/dashboard.component.scss","webpack:///src/app/pages/account/dashboard/dashboard.component.ts","webpack:///src/app/pages/account/edit-property/edit-property.component.scss","webpack:///src/app/pages/account/edit-property/edit-property.component.ts","webpack:///src/app/pages/account/favorites/favorites.component.scss","webpack:///src/app/pages/account/favorites/favorites.component.ts","webpack:///src/app/pages/account/featured/featured.component.scss","webpack:///src/app/pages/account/featured/featured.component.ts","webpack:///src/app/pages/account/housingunit/housingunit/add-hunit.component.scss","webpack:///src/app/pages/account/housingunit/housingunit/housingunit.component.scss","webpack:///src/app/pages/account/housingunit/housingunit/housingunit.component.ts","webpack:///src/app/pages/account/housingunit/housingunit/single-unit/single-unit.component.scss","webpack:///src/app/pages/account/housingunit/housingunit/single-unit/single-unit.component.ts","webpack:///src/app/pages/account/housingunit/store/hunit.selectors.ts","webpack:///src/app/pages/account/my-properties/my-properties.component.scss","webpack:///src/app/pages/account/my-properties/my-properties.component.ts","webpack:///src/app/pages/account/profile/profile.component.scss","webpack:///src/app/pages/account/profile/profile.component.ts","webpack:///src/app/pages/account/security/security.component.scss","webpack:///src/app/pages/account/security/security.component.ts"],"names":["AccountComponent","router","store","authService","psConfig","wheelPropagation","sidenavOpen","links","name","href","icon","window","innerWidth","pipe","subscribe","user","checkUser","$event","link","stopPropagation","logout","dispatch","navigate","url","events","event","sidenav","close","selector","template","routes","path","component","children","redirectTo","pathMatch","canActivate","AccountModule","declarations","imports","forChild","providers","DashboardComponent","EditPropertyComponent","appService","activatedRoute","fb","mapsAPILoader","ngZone","location","snackBar","features","propertyTypes","propertyStatuses","cities","neighborhoods","streets","lat","lng","zoom","city","step","back","getFeatures","getPropertyTypes","getPropertyStatuses","getCities","getNeighborhoods","getStreets","submitForm","group","basic","title","required","desc","shortDesc","priceDollar","priceEuro","propertyType","propertyStatus","gallery","address","zipCode","neighborhood","street","additional","bedrooms","bathrooms","garages","area","yearBuilt","buildFeatures","media","videos","array","createVideo","plans","createPlan","additionalFeatures","createFeature","featured","advertise","placesAutocomplete","sub","params","getPropertyById","id","unsubscribe","data","console","log","property","controls","get","setValue","sale","rent","filter","p","value","statusList","forEach","status","push","images","item","image","medium","preview","formattedAddress","feature","selected","length","removeAt","video","plan","rooms","baths","index","emitEvent","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","load","then","autocomplete","google","maps","places","Autocomplete","addressAutocomplete","nativeElement","types","addListener","run","place","getPlace","geometry","undefined","getAddress","response","responseResult","results","formatted_address","setAddresses","e","result","alert","newCity","newStreet","newNeighborhood","address_components","indexOf","long_name","n","cityId","neighborhoodId","arr","map","propertyInput","_id","form","valid","nextStep","uploadProperty","open","verticalPosition","duration","FavoritesComponent","displayedColumns","dataSource","Data","favorites","paginator","sort","splice","filterValue","trim","toLowerCase","firstPage","FeaturedComponent","mediaObserver","total","pgroupId","viewType","viewCol","count","properties","pgroup","watcher","media$","change","mqAlias","getProperties","loadProperties","page","limit","find","x","HousingunitComponent","hunitService","dialog","hunit","propertyId","loadHunit","dialogRef","AddHunitComponent","width","afterClosed","hunitParams","formBuilder","type","infoForm","hnumber","compose","minLength","floor","description","patchValue","SingleUnitComponent","hunits","unit","getSelectors","_selectHunitDataIds","selectIds","_selectHunitEntities","selectEntities","_selectAllHunit","selectAll","_selectHunitTotal","selectTotal","selectHunitState","selectHunitIds","selectHunitEntities","selectAllHunit","selectHunitError","state","error","selectHunitLoading","loading","selectHunitTotal","MyPropertiesComponent","ProfileComponent","userTypes","userType","fullName","phone","idNumber","receiveNewsletter","organization","values","file","userParams","panelClass","SecurityComponent","passwordForm","currentPassword","newPassword","confirmNewPassword","validator"],"mappings":"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","file":"pages-account-account-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\" style=\\\"padding: 0px !important;\\\">\\n    <div class=\\\"theme-container\\\">\\n        <mat-sidenav-container class=\\\"account\\\">\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\"\\n                class=\\\"account-sidenav p-3\\\" style=\\\"background: white !important;\\\">\\n                <div [perfectScrollbar]=\\\"psConfig\\\" class=\\\"inner-div\\\">\\n                    <button fxHide=\\\"false\\\" fxHide.gt-sm mat-button color=\\\"warn\\\" class=\\\"close\\\"\\n                        (click)=\\\"sidenav.toggle()\\\">\\n                        <mat-icon>clear_all</mat-icon>\\n                    </button>\\n                    <mat-card-header fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                        <img style=\\\"width: 100px;height: 100px;\\\" mat-card-avatar [attr.src]=\\\"img(user.avatar)\\\" alt=\\\"\\\">\\n                        <div class=\\\"column\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <mat-card-title class=\\\"mb-0\\\">{{user.fullName}}</mat-card-title>\\n                            <p> {{user.email}}</p>\\n                        </div>\\n\\n                    </mat-card-header>\\n                    <div class=\\\"divider my-3\\\"></div>\\n                    <div style=\\\"height: 400px;overflow-y:scroll;\\\">\\n                        <div *ngFor=\\\"let link of links\\\">\\n                            <a matLine (click)=\\\"openLink($event,link)\\\" [routerLink]=\\\"link.href\\\"\\n                                routerLinkActive=\\\"horizontal-active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n                                fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-3\\\">\\n                                <mat-icon class=\\\"text-muted\\\">{{link.icon}}</mat-icon>\\n                                <span class=\\\"mx-2\\\">{{ link.name }}</span>\\n                            </a>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </mat-sidenav>\\n\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\" style=\\\"height: 600px;overflow-y:scroll;\\\">\\n                <mat-card fxHide=\\\"true\\\" *ngIf=\\\"!sidenavOpen\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\"\\n                    class=\\\"text-muted mb-3\\\">\\n                    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n                        <mat-icon>tune</mat-icon>\\n                    </button>\\n                    <h3> My Account</h3>\\n                </mat-card>\\n                <div class=\\\"sector\\\">\\n                    <mat-card class=\\\"account-wrapper\\\">\\n                        <router-outlet></router-outlet>\\n                    </mat-card>\\n                </div>\\n\\n            </mat-sidenav-content>\\n        </mat-sidenav-container>\\n\\n    </div>\\n</div>\";","export default \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\";","export default \"<mat-accordion [formGroup]=\\\"submitForm\\\" class=\\\"edit-property\\\">\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>    \\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>Basic</mat-panel-title> \\r\\n    </mat-expansion-panel-header>\\r\\n    <form formGroupName=\\\"basic\\\" fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <h1 class=\\\"fw-500 text-center\\\">Basic</h1>\\r\\n        </div>\\r\\n                \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Title</mat-label>\\r\\n              <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" required autocomplete=\\\"off\\\">\\r\\n              <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].title.errors?.required\\\">Title is required</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>  \\r\\n\\r\\n        \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Short description</mat-label> \\r\\n              <textarea matInput placeholder=\\\"Short description\\\" formControlName=\\\"shortDesc\\\" rows=\\\"3\\\"></textarea> \\r\\n          </mat-form-field> \\r\\n        </div> \\r\\n    \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Description</mat-label> \\r\\n              <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" rows=\\\"7\\\"></textarea> \\r\\n          </mat-form-field> \\r\\n        </div> \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Price (RENT)</mat-label>\\r\\n              <input matInput placeholder=\\\"Enter sale or rent price\\\" formControlName=\\\"priceDollar\\\" autocomplete=\\\"off\\\"> \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Price (SALE)</mat-label>\\r\\n              <input matInput placeholder=\\\"Enter sale or rent price\\\" formControlName=\\\"priceEuro\\\" autocomplete=\\\"off\\\"> \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Property Type</mat-label> \\r\\n              <mat-select placeholder=\\\"Select Property Type\\\" formControlName=\\\"propertyType\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType\\\">\\r\\n                      {{propertyType.name}}\\r\\n                  </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].propertyType.errors?.required\\\">Property Type is required</mat-error>                               \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Property Status</mat-label>\\r\\n              <mat-select placeholder=\\\"Select Property Status\\\" formControlName=\\\"propertyStatus\\\" multiple>\\r\\n                  <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus\\\">\\r\\n                      {{propertyStatus.name}}\\r\\n                  </mat-option>\\r\\n              </mat-select>                             \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\r\\n            <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Gallery</span><span class=\\\"text-muted mx-3\\\">(max 8 images)</span></p>  \\r\\n            <input-file formControlName=\\\"gallery\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\r\\n        </div> \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"onSubmitForm('basic')\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n            <mat-icon>navigate_next</mat-icon>\\r\\n          </button> \\r\\n        </div> \\r\\n    \\r\\n    </form> \\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle [disabled]=\\\"!submitForm.get('basic').valid\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>Address</mat-panel-title> \\r\\n    </mat-expansion-panel-header>\\r\\n    <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\r\\n            \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <h1 class=\\\"fw-500 text-center\\\">Address</h1>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\"  class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>City</mat-label>\\r\\n              <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\r\\n                <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">\\r\\n                  {{city.name}}\\r\\n                </mat-option>\\r\\n              </mat-select> \\r\\n              <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n                  \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\r\\n              <mat-label>Location</mat-label>\\r\\n              <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\r\\n              <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n              </button>\\r\\n              <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">Location is required</mat-error>   \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n      \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\r\\n            <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\r\\n                <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\r\\n            </agm-map>\\r\\n        </div>\\r\\n      \\r\\n       \\r\\n      \\r\\n        <!-- <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Zip Code</mat-label>\\r\\n              <input matInput placeholder=\\\"exp. 98104\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n      \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Neighborhood</mat-label>\\r\\n            <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\" multiple (selectionChange)=\\\"onSelectNeighborhood()\\\">\\r\\n              <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood\\\">\\r\\n                {{neighborhood.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>   \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n      \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Street</mat-label>\\r\\n            <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" multiple> \\r\\n              <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street\\\">\\r\\n                {{street.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>  \\r\\n          </mat-form-field>\\r\\n        </div> \\r\\n       -->\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"prevStep()\\\" type=\\\"button\\\">\\r\\n            <mat-icon>navigate_before</mat-icon>\\r\\n            <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"onSubmitForm('address')\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n            <mat-icon>navigate_next</mat-icon>\\r\\n          </button> \\r\\n        </div>  \\r\\n      \\r\\n    </form>    \\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle [disabled]=\\\"!submitForm.get('basic').valid || !submitForm.get('address').valid\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>Additional</mat-panel-title> \\r\\n    </mat-expansion-panel-header>\\r\\n    <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <h1 class=\\\"fw-500 text-center\\\">Additional</h1>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Bedrooms</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Bathrooms</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Garages</mat-label>\\r\\n              <input type=\\\"number\\\" matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Area (ft²)</mat-label>\\r\\n              <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber>                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Year Built</mat-label>\\r\\n              <input matInput placeholder=\\\"Year Built\\\" autocomplete=\\\"off\\\" formControlName=\\\"yearBuilt\\\" onlyNumber  maxlength=\\\"4\\\">                  \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\r\\n            <p class=\\\"uppercase m-2 fw-500\\\">Features</p> \\r\\n            <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\r\\n                <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\" class=\\\"p-2\\\">\\r\\n                    <mat-checkbox formControlName=\\\"selected\\\">{{features[i].name}}</mat-checkbox>                         \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"prevStep()\\\" type=\\\"button\\\">\\r\\n            <mat-icon>navigate_before</mat-icon>\\r\\n            <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"onSubmitForm('additional')\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n            <mat-icon>navigate_next</mat-icon>\\r\\n          </button> \\r\\n        </div>  \\r\\n    \\r\\n        \\r\\n    \\r\\n    \\r\\n    </form>\\r\\n  </mat-expansion-panel> \\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 3\\\" (opened)=\\\"setStep(3)\\\" hideToggle [disabled]=\\\"!submitForm.get('basic').valid || !submitForm.get('address').valid || !submitForm.get('additional').valid \\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>Media</mat-panel-title> \\r\\n    </mat-expansion-panel-header>\\r\\n    <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\r\\n                  \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n            <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Videos</span><span class=\\\"text-muted mx-3\\\">(video link to .mp4)</span></p>                            \\r\\n            <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addVideo()\\\" matTooltip=\\\"Add New Video\\\" matTooltipPosition=\\\"after\\\">\\r\\n                <mat-icon>add_circle</mat-icon>\\r\\n            </button>\\r\\n        </div> \\r\\n        <div formArrayName=\\\"videos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n            <div *ngFor=\\\"let item of submitForm.get('media')['controls'].videos['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Name</mat-label>\\r\\n                        <input matInput placeholder=\\\"Video name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Link</mat-label>\\r\\n                        <input matInput placeholder=\\\"Link to video\\\" formControlName=\\\"link\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field>                                                 \\r\\n                </div>\\r\\n                <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVideo(i)\\\" matTooltip=\\\"Delete Video\\\">\\r\\n                        <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                </div>                            \\r\\n            </div>        \\r\\n        </div>\\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n            <p class=\\\"uppercase fw-500 mb-0\\\">Plans</p>                            \\r\\n            <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addPlan()\\\" matTooltip=\\\"Add New Plan\\\" matTooltipPosition=\\\"after\\\" class=\\\"mx-3\\\">\\r\\n                <mat-icon>add_circle</mat-icon>\\r\\n            </button>\\r\\n        </div> \\r\\n        <div formArrayName=\\\"plans\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n            <div *ngFor=\\\"let item of submitForm.get('media')['controls'].plans['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\r\\n                <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Name</mat-label>\\r\\n                        <input matInput placeholder=\\\"Plan name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Desc</mat-label>\\r\\n                        <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field> \\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Area (ft²)</mat-label>\\r\\n                        <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Rooms</mat-label>\\r\\n                        <input matInput placeholder=\\\"Rooms\\\" formControlName=\\\"rooms\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Baths</mat-label>\\r\\n                        <input matInput placeholder=\\\"Baths\\\" formControlName=\\\"baths\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                    </mat-form-field>\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">  \\r\\n                        <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\r\\n                    </div>                \\r\\n                </div>\\r\\n                <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePlan(i)\\\" matTooltip=\\\"Delete Plan\\\">\\r\\n                        <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                </div>  \\r\\n            </div>        \\r\\n        </div> \\r\\n    \\r\\n        \\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n            <p class=\\\"mb-0 uppercase fw-500\\\">Additional features</p>                            \\r\\n            <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add New Feature\\\" matTooltipPosition=\\\"after\\\">\\r\\n                <mat-icon>add_circle</mat-icon>\\r\\n            </button>\\r\\n        </div> \\r\\n        <div formArrayName=\\\"additionalFeatures\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n            <div *ngFor=\\\"let item of submitForm.get('media')['controls'].additionalFeatures['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Name</mat-label>\\r\\n                        <input matInput placeholder=\\\"Feature name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                        <mat-label>Value</mat-label>\\r\\n                        <input matInput placeholder=\\\"Feature value\\\" formControlName=\\\"value\\\" autocomplete=\\\"off\\\">     \\r\\n                    </mat-form-field>                                                 \\r\\n                </div>\\r\\n                <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteFeature(i)\\\" matTooltip=\\\"Delete Feature\\\">\\r\\n                        <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                </div>                            \\r\\n            </div>        \\r\\n        </div>    \\r\\n    \\r\\n        <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\r\\n            <mat-slide-toggle formControlName=\\\"featured\\\">Featured</mat-slide-toggle>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\r\\n          <mat-slide-toggle formControlName=\\\"advertise\\\">Advertise</mat-slide-toggle>\\r\\n      </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"prevStep()\\\" type=\\\"button\\\">\\r\\n            <mat-icon>navigate_before</mat-icon>\\r\\n            <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"onSubmitForm('media')\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">Update</span>\\r\\n          </button> \\r\\n        </div>\\r\\n    \\r\\n    </form>\\r\\n  </mat-expansion-panel> \\r\\n\\r\\n</mat-accordion> \\r\\n\\r\\n<div *ngIf=\\\"step === 4\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\r\\n  <button  (click)=\\\"goBack()\\\" mat-raised-button color=\\\"accent\\\">Return to my properties</button>       \\r\\n</div> \";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field> \\r\\n<div class=\\\"table-wrapper\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Image Column -->\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property.id ]\\\" class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Remove </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> \\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button> \\r\\n        </td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table> \\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p> \\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"\\\">\\n      <div class=\\\"\\\">\\n        <h1 class=\\\"bg-primary p-3 title\\\">{{pgroup.title}}</h1>\\n      </div>\\n      <div class=\\\"w-100 btn-padding mt-3\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"end center\\\">\\n        <a mat-stroked-button color=\\\"primary\\\"  fxLayoutAlign=\\\"center center\\\"  [routerLink]=\\\"['/account/submit-property', pgroupId ]\\\">\\n          <mat-icon>add_box</mat-icon> Add New Property\\n        </a>\\n      </div>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" fxHide.xs fxHide.sm >\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\n      </mat-form-field>\\n\\n      <div class=\\\"table-wrapper\\\" fxHide.xs fxHide.sm fx>\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\n  \\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n            <td mat-cell *matCellDef=\\\"let property;let i = index;\\\"> {{i+1}} </td>\\n          </ng-container>\\n  \\n          <!-- Image Column -->\\n          <ng-container matColumnDef=\\\"image\\\">\\n            <th mat-header-cell *matHeaderCellDef> Image </th>\\n            <td mat-cell *matCellDef=\\\"let property\\\"><img\\n                [src]=\\\"property.gallery.length>0?img(property.gallery[0].medium):null\\\" [style.width.px]=\\\"100\\\"\\n                class=\\\"d-block\\\">\\n            </td>\\n          </ng-container>\\n  \\n          <!-- Title Column -->\\n          <ng-container matColumnDef=\\\"title\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\n            <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property._id ]\\\"\\n                class=\\\"property-name\\\">{{property.title}}</a></td>\\n          </ng-container>\\n  \\n          <!-- Published Column -->\\n          <ng-container matColumnDef=\\\"published\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\n            <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd MMMM, yyyy\\\"}} </td>\\n          </ng-container>\\n  \\n          <!-- Views Column -->\\n          <ng-container matColumnDef=\\\"views\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\n            <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\n          </ng-container>\\n  \\n          <!-- Actions Column -->\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let property\\\">\\n              <a [routerLink]=\\\"['/account/my-properties', property._id]\\\" mat-icon-button color=\\\"primary\\\"\\n                matTooltip=\\\"Edit property\\\">\\n                <mat-icon>edit</mat-icon>\\n              </a>\\n              <a [routerLink]=\\\"['/account/hunits', property._id]\\\" mat-icon-button color=\\\"primary\\\"\\n               matTooltip=\\\"Details\\\" class=\\\"remove\\\">\\n                <mat-icon>business</mat-icon>\\n              </a>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\n                <mat-icon>delete</mat-icon>\\n              </button>\\n  \\n            </td>\\n          </ng-container>\\n  \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;let i = index\\\">\\n          </tr>\\n        </table>\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\n      </div>\\n      <!-- fxHide.gt-md fxHide.gt-sm -->\\n      <div class=\\\"\\\" fxHide.gt-md fxHide.gt-sm>\\n         <div class=\\\"w-100\\\"  *ngFor=\\\"let property of properties\\\">\\n             <app-property-item style=\\\"margin: 5%;\\\" [property]=\\\"property\\\" [viewType]=\\\"viewType\\\" [viewColChanged]=\\\"viewCol\\\">\\n             </app-property-item>\\n         </div>\\n      </div>\\n      \\n\\n      <mat-paginator [length]=\\\"total\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons>\\n      </mat-paginator>\\n    </div>\\n  </div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\n    <form [formGroup]=\\\"infoForm\\\">\\n        <div fxFlex>\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">{{title}}</h2>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\n                <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">group</mat-icon>\\n                <mat-label>Status</mat-label>\\n                <mat-select placeholder=\\\"Select User Type\\\" formControlName=\\\"status\\\">\\n                    <mat-option *ngFor=\\\"let type of status\\\" [value]=\\\"type.name\\\">\\n                        {{type.name}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"infoForm.controls.status.errors?.required\\\">Status is required\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>House Number</mat-label>\\n                <input matInput placeholder=\\\"House Number\\\" formControlName=\\\"hnumber\\\" required autocomplete=\\\"off\\\">\\n                <mat-error *ngIf=\\\"infoForm.controls.hnumber.errors?.required\\\">House number is required</mat-error>\\n                <mat-error *ngIf=\\\"infoForm.controls.hnumber.hasError('minlength')\\\">Number isn't long enough, minimum of\\n                    3\\n                    characters</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Floor </mat-label>\\n                <input type=\\\"number\\\" inputmode=\\\"numeric\\\" matInput placeholder=\\\"Floor\\\" formControlName=\\\"floor\\\" onlyNumber\\n                    autocomplete=\\\"off\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Description</mat-label>\\n                <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" required\\n                    autocomplete=\\\"off\\\"></textarea>\\n                <mat-error *ngIf=\\\"infoForm.controls.description.errors?.required\\\">Description is required</mat-error>\\n            </mat-form-field>\\n            <div fxLayout=\\\"row wrap\\\">\\n                <div class=\\\"text-center mt-2 btn-padding\\\" fxFlex=\\\"48\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase w-100\\\" \\n                        [mat-dialog-close]=\\\"infoForm.value\\\">Save</button>\\n                </div>\\n                <div class=\\\"text-center mt-2 btn-padding\\\" fxFlex=\\\"48\\\">\\n                    <button mat-stroked-button color=\\\"primary\\\"  class=\\\"uppercase w-100\\\"\\n                        (click)=\\\"closeDialog()\\\">Cancel</button>\\n                </div>\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </form>\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"header-banner\\\">\\n        <div fxLayout=\\\"wrap\\\" class=\\\"w-100\\\" style=\\\"border: 1px solid #cfc387;\\\">\\n            <div class=\\\"btn-padding slide-item\\\" [style.background-image]=\\\"'url(' +img(check(property))+')'\\\"\\n                style=\\\"width: 150px;height: 136px;margin: 16px;\\\"></div>\\n            <div fxFlex fxLayout=\\\"column\\\" class=\\\"btn-padding\\\">\\n                <h2>{{property.title}}</h2>\\n                <span> {{property.city}}</span>\\n                <span> {{property.formattedAddress}}</span>\\n                <p>Bedroooms: {{property.bedrooms}} &nbsp; Units: {{total}}</p>\\n                <div>\\n                    <button mat-flat-button color=\\\"primary\\\" fxLayoutAlign=\\\"end end\\\" (click)=\\\"openDialog()\\\">\\n                        <mat-icon class=\\\"mat-18\\\">add</mat-icon> Add Hunits\\n                    </button>\\n                </div>\\n\\n            </div>\\n        </div>\\n        <br />\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter hunits\\\" autocomplete=\\\"off\\\">\\n        </mat-form-field>\\n        <div class=\\\"table-wrapper w-100\\\">\\n            <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\n\\n                <!-- ID Column -->\\n                <ng-container matColumnDef=\\\"id\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let hunit;let i = index;\\\"> {{i+1}} </mat-cell>\\n                </ng-container>\\n\\n                <!-- House Number-->\\n                <ng-container matColumnDef=\\\"hnumber\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> HNo. </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let hunit\\\"><a [routerLink]=\\\"['/hunits', hunit._id ]\\\"\\n                            class=\\\"property-name\\\">{{hunit.hnumber}}</a></mat-cell>\\n                </ng-container>\\n\\n                <!-- Published Column -->\\n                <ng-container matColumnDef=\\\"balance\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Bill Amount </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let hunit\\\" [ngStyle]=\\\"{'color' : (hunit.bills-hunit.payments) > 1 ? 'red' : 'darkgreen'}\\\"> {{ hunit.bills-hunit.payments | currency : 'KSH' : 'symbol' : '1.0'}} </mat-cell>\\n                </ng-container>\\n\\n                <!-- House Column -->\\n                <ng-container matColumnDef=\\\"status\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let hunit\\\"><a [routerLink]=\\\"['/hunits', hunit._id ]\\\"\\n                            class=\\\"property-name\\\">{{hunit.status}}</a></mat-cell>\\n                </ng-container>\\n\\n\\n                <!-- Actions Column -->\\n                <ng-container matColumnDef=\\\"actions\\\">\\n                    <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let hunit\\\">\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"openEditDialog(hunit)\\\" matTooltip=\\\"Edit hunit\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <a [routerLink]=\\\"['/account/singleunit', hunit._id]\\\" mat-icon-button color=\\\"primary\\\"\\n                             matTooltip=\\\"Details\\\" class=\\\"remove\\\">\\n                            <mat-icon>list_alt</mat-icon>\\n                        </a>\\n                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(hunit)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let hunit; columns: displayedColumns;let i = index\\\">\\n                </mat-row>\\n            </mat-table>\\n            <p *ngIf=\\\"dataSource?.data.leng=== 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\n        </div>\\n        <mat-paginator [length]=\\\"total\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons>\\n        </mat-paginator>\\n    </div>\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\n    <div fxLayout=\\\"wrap\\\" class=\\\"w-100\\\" style=\\\"border: 1px solid #cfc387;\\\">\\n\\n        <div fxFlex fxLayout=\\\"column\\\" class=\\\"btn-padding\\\">\\n            <h2 class=\\\"primary-color\\\">\\n                <mat-icon style=\\\"font-size:16px;\\\">apartment</mat-icon>{{hunit.hnumber}}\\n            </h2>\\n            <!-- <span> {{hunit.hnumber}}</span> -->\\n            <!-- <span> {{property.formattedAddress}}</span>\\n        <p>Bedroooms: {{property.bedrooms}} &nbsp; Units: {{total}}</p> -->\\n\\n        </div>\\n    </div>\\n    <div class=\\\"w-100\\\">\\n        <mat-tab-group mat-align-tabs=\\\"end\\\">\\n            <mat-tab>\\n                <ng-template mat-tab-label>\\n                    <mat-icon class=\\\"example-tab-icon\\\">supervisor_account</mat-icon>\\n                    Tenants\\n                </ng-template>\\n                <app-tenant></app-tenant>\\n            </mat-tab>\\n\\n            <mat-tab>\\n                <ng-template mat-tab-label>\\n                    <mat-icon class=\\\"example-tab-icon\\\">receipt_long</mat-icon>\\n                    Bills\\n                </ng-template>\\n                <app-bill></app-bill>\\n            </mat-tab>\\n            \\n            <mat-tab>\\n                <ng-template mat-tab-label>\\n                    <mat-icon class=\\\"example-tab-icon\\\">payment</mat-icon>\\n                    Payments\\n                </ng-template>\\n                <app-payment></app-payment>\\n            </mat-tab>\\n           \\n        </mat-tab-group>\\n\\n    </div>\\n\\n\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" class=\\\"\\\">\\r\\n    <div class=\\\"\\\">\\r\\n      <h1 class=\\\"bg-primary p-3 title\\\">{{pgroup.title}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"w-100 btn-padding mt-3\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n      <a mat-stroked-button color=\\\"primary\\\"  fxLayoutAlign=\\\"center center\\\"  [routerLink]=\\\"['/account/submit-property', pgroupId ]\\\">\\r\\n        <mat-icon>add_box</mat-icon> Add New Property\\r\\n      </a>\\r\\n    </div>\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"table-wrapper\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property;let i = index;\\\"> {{i+1}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Image Column -->\\r\\n        <ng-container matColumnDef=\\\"image\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"><img\\r\\n              [src]=\\\"property.gallery.length>0?img(property.gallery[0].medium):null\\\" [style.width.px]=\\\"100\\\"\\r\\n              class=\\\"d-block\\\">\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Title Column -->\\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property._id ]\\\"\\r\\n              class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Published Column -->\\r\\n        <ng-container matColumnDef=\\\"published\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd MMMM, yyyy\\\"}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Views Column -->\\r\\n        <ng-container matColumnDef=\\\"views\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\">\\r\\n            <a [routerLink]=\\\"['/account/my-properties', property._id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n              matTooltip=\\\"Edit property\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </a>\\r\\n            <a [routerLink]=\\\"['/account/hunits', property._id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n             matTooltip=\\\"Details\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>business</mat-icon>\\r\\n            </a>\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;let i = index\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n    </div>\\r\\n    <mat-paginator [length]=\\\"total\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons>\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</div>\";","export default \"<form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"onInfoFormSubmit(infoForm.value)\\\">\\n    <div fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Account details</h2>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\n                <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">group</mat-icon>\\n                <mat-label>User type</mat-label>\\n                <mat-select placeholder=\\\"Select User Type\\\" formControlName=\\\"userType\\\">\\n                    <mat-option *ngFor=\\\"let type of userTypes\\\" [value]=\\\"type\\\">\\n                        {{type.name}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"infoForm.controls.userType.errors?.required\\\">User type is required\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Name</mat-label>\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"fullName\\\" required autocomplete=\\\"off\\\">\\n                <mat-error *ngIf=\\\"infoForm.controls.fullName.errors?.required\\\">Name is required</mat-error>\\n                <mat-error *ngIf=\\\"infoForm.controls.fullName.hasError('minlength')\\\">Name isn't long enough, minimum of 3\\n                    characters</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Phone</mat-label>\\n                <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required onlyNumber autocomplete=\\\"off\\\">\\n                <mat-error *ngIf=\\\"infoForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Id number</mat-label>\\n                <input matInput placeholder=\\\"Id number\\\" formControlName=\\\"idNumber\\\" onlyNumber autocomplete=\\\"off\\\">\\n\\n            </mat-form-field>\\n            <mat-slide-toggle formControlName=\\\"receiveNewsletter\\\" class=\\\"my-2\\\">Receive Newsletter\\n            </mat-slide-toggle>\\n\\n        </div>\\n\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\n            <div class=\\\"mb-3\\\">\\n                <input-file placeholder=\\\"Change profile picture\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\"\\n                    fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>\\n            </div>\\n        </div>\\n\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\n            <div class=\\\"mb-3\\\">\\n                <a mat-icon-button [routerLink]=\\\"['/account/security']\\\">\\n                    <mat-icon class=\\\"mat-18\\\">lock</mat-icon> Change Password\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"text-center mt-2 w-100\\\" style=\\\"margin-bottom: 200px;\\\" fxLayout=\\\"row wrap\\\"\\n        fxLayoutAlign=\\\"space-between center\\\">\\n        <button fxFlex mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Update </button>\\n        <div style=\\\"width: 10px;\\\"></div>\\n        <button fxFlex mat-stroked-button color=\\\"primary\\\" class=\\\"uppercase \\\" (click)=\\\"logOut()\\\"> log out </button>\\n    </div>\\n</form>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\n    \\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Password change</h2>\\n        <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"onPasswordFormSubmit(passwordForm.value)\\\">            \\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Current Password</mat-label>\\n                <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required autocomplete=\\\"off\\\">\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.errors?.required\\\">Current Password is required</mat-error>\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.hasError('minlength')\\\">Current Password isn't long enough, minimum of 6 characters</mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>New Password</mat-label>\\n                <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required autocomplete=\\\"off\\\">\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.errors?.required\\\">New Password is required</mat-error>\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.hasError('minlength')\\\">New Password isn't long enough, minimum of 6 characters</mat-error>\\n            </mat-form-field> \\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Confirm New Password</mat-label>\\n              <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\" required autocomplete=\\\"off\\\">\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.errors?.required\\\">Confirm New Password is required</mat-error>\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\n            </mat-form-field>\\n            <div class=\\\"text-center mt-2\\\">\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Change password</button>\\n            </div>\\n        </form>\\n    </div>\\n</div> \\n\";","export default \".account-sidenav {\\n  width: 280px;\\n  padding: 2px;\\n  margin: 0px;\\n}\\n.account-sidenav .mat-nav-list {\\n  box-sizing: border-box;\\n}\\n.account-sidenav .mat-nav-list .mat-list-item {\\n  height: 36px;\\n  font-size: 14px;\\n}\\nbutton {\\n  border-radius: 10px !important;\\n}\\n.sector {\\n  padding: 1rem !important;\\n}\\n@media screen and (max-width: 960px) {\\n  .sector {\\n    padding: 0px !important;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FBQ0o7QUFBSTtFQUNJLHNCQUFBO0FBRVI7QUFEUTtFQUNJLFlBQUE7RUFDQSxlQUFBO0FBR1o7QUFHQTtFQUNJLDhCQUFBO0FBQUo7QUFFQTtFQUNJLHdCQUFBO0FBQ0o7QUFFQTtFQUNJO0lBQ0ksdUJBQUE7RUFDTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtc2lkZW5hdntcclxuICAgIHdpZHRoOiAyODBweDtcclxuICAgIHBhZGRpbmc6IDJweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgLm1hdC1uYXYtbGlzdHtcclxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgIC5tYXQtbGlzdC1pdGVte1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5idXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5zZWN0b3J7XHJcbiAgICBwYWRkaW5nOiAxcmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk2MHB4KSB7XHJcbiAgICAuc2VjdG9ye1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcbi8vIC5hY2NvdW50LWNvbnRlbnR7XHJcbi8vICAgICBtaW4taGVpZ2h0OiA0MDBweDtcclxuLy8gICAgIHBhZGRpbmc6IDJweDtcclxuLy8gICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbi8vICAgICAmLnAtbGVmdHtcclxuLy8gICAgICAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbi8vICAgICB9XHJcbi8vICAgICAuaGVhZGVyLXJvd3tcclxuLy8gICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4vLyAgICAgICAgIHBhZGRpbmc6IDAgMTZweDtcclxuLy8gICAgICAgICBoZWlnaHQ6IDU2cHg7XHJcbi8vICAgICB9XHJcbi8vICAgICAuYWNjb3VudC13cmFwcGVye1xyXG4vLyAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XHJcbi8vICAgICAgICAgcGFkZGluZzogMTZweDtcclxuLy8gICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcbi8vIGJvZHl7XHJcbi8vICAgICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbi8vIH1cclxuXHJcbi8vIC5hY2NvdW50LXNpZGVuYXZ7XHJcbi8vICAgICB3aWR0aDogMjgwcHg7IFxyXG4vLyAgICAgZmxvYXQ6IGxlZnQ7XHJcbi8vICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vICAgICBtYXJnaW4tYm90dG9tOiAxNnB4OyAgXHJcbi8vICAgICBib3JkZXI6IDAgIWltcG9ydGFudDsgXHJcbi8vICAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4vLyAgICAgLm1hdC1kcmF3ZXItaW5uZXItY29udGFpbmVye1xyXG4vLyAgICAgICAgIHBhZGRpbmc6IDJweDtcclxuLy8gICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbi8vICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuLy8gICAgICAgICAubWF0LWNhcmR7XHJcbi8vICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuLy8gICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuLy8gICAgICAgICAgICAgLm1hdC1uYXYtbGlzdHtcclxuLy8gICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbi8vICAgICAgICAgICAgICAgICAubWF0LWxpc3QtaXRlbXtcclxuLy8gICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4vLyAgICAgICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSBcclxuLy8gfSJdfQ== */\";","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { selectCurrentUser } from '../register/store/user.selectors';\nimport { User } from '../register/models/user';\nimport { AuthService } from '../register/services/auth.service';\nimport { UserLogoutAction } from '../register/store/user.actions';\nimport { img } from '../properties/utils/to-formdata';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n  constructor(public router: Router, private store: Store<GlobalState>, private authService: AuthService) {\n\n   }\n  public psConfig: PerfectScrollbarConfigInterface = {\n    wheelPropagation:  true\n  };\n  @ViewChild('sidenav') sidenav: any;\n  public sidenavOpen = true;\n  public links = [\n\n    { name: 'My Properties', href: 'property-groups', icon: 'apartment' },\n    { name: 'Manage Properties', href: 'featured', icon: 'settings' },\n    { name: 'Customer Feedback', href: 'feedback', icon: 'list_alt' },\n    { name: 'Blog posts', href: 'blog', icon: 'how_to_reg' },\n    { name: 'Mailing list', href: 'mailing-list', icon: 'attach_email' },\n    { name: 'Bookmarks', href: 'favorites', icon: 'bookmarks' },\n    { name: 'Account', href: 'profile', icon: 'person' },\n  { name: 'Logout', href: '/login', icon: 'power_settings_new' },\n  ];\n  public user: User;\n\n\n  ngOnInit() {\n    if (window.innerWidth < 960){\n      this.sidenavOpen = false;\n    }\n    this.store.pipe(select(selectCurrentUser)).subscribe(user => this.checkUser(user) );\n  }\n  private checkUser(user: User){\n\n    this.user = user;\n  }\n\n  @HostListener('window:resize')\n  public onWindowResize(): void {\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\n  }\n\n\n  public openLink($event: MouseEvent, link) {\n    if (link.name === 'Logout') {\n        $event.stopPropagation();\n        this.authService.logout();\n        this.store.dispatch(new UserLogoutAction());\n        this.router.navigate(['/login']);\n\n    }\n    return;\n\n    // navigates to /test\n}\n\npublic img(url: string){\n  if (url){\n    return img(url);\n  }\n  return 'assets/images/others/user.jpg';\n\n}\n\nngAfterViewInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        if (window.innerWidth < 960){\n          this.sidenav.close();\n        }\n      }\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { InputFileModule } from 'ngx-input-file';\nimport { AgmCoreModule } from '@agm/core';\nimport { AccountComponent } from './account.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyPropertiesComponent } from './my-properties/my-properties.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditPropertyComponent } from './edit-property/edit-property.component';\nimport { AuthGuard } from '../register/services/auth.guard';\nimport { SecurityComponent } from './security/security.component';\nimport { SubmitPropertyComponent } from '../submit-property/submit-property.component';\nimport { HunitService} from './housingunit/services/hunit.service';\nimport { HousingunitComponent, AddHunitComponent } from './housingunit/housingunit/housingunit.component';\nimport { SingleUnitComponent } from './housingunit/housingunit/single-unit/single-unit.component';\nimport { PgroupComponent } from 'src/app/shared/pgroup/ui/pgroup.component';\nimport { FeaturedComponent } from './featured/featured.component';\nimport { SubmitPropertyModule } from '../submit-property/submit-property.module';\nimport { FeedbackComponent } from 'src/app/shared/feedback/ui/feedback.component';\nimport { PublicationComponent } from 'src/app/shared/publication/ui/publication.component';\nimport { EmailComponent } from 'src/app/shared/email/ui/email.component';\nimport { OwnerComponent } from 'src/app/shared/owner/ui/owner.component';\n\n\nexport const routes = [\n  {\n    path: '',\n    component: AccountComponent, children: [\n      { path: '', redirectTo: 'profile', pathMatch: 'full' },\n      { path: 'property-groups', component: PgroupComponent},\n      { path: 'property-groups/:id', component: MyPropertiesComponent},\n      { path: 'my-properties', component: MyPropertiesComponent },\n      { path: 'my-properties/:id', component: EditPropertyComponent },\n      { path: 'favorites', component: FavoritesComponent },\n      { path: 'blog', component: PublicationComponent },\n      { path: 'feedback', component: FeedbackComponent },\n      { path: 'profile', component: ProfileComponent },\n      { path: 'submit-property', component: SubmitPropertyComponent },\n      { path: 'submit-property/:id', component: SubmitPropertyComponent },\n      { path: 'hunits/:id', component: HousingunitComponent },\n      { path: 'singleunit/:id', component: SingleUnitComponent },\n      { path: 'owner/:id', component: OwnerComponent },\n      {path: 'security', component: SecurityComponent},\n      {path: 'mailing-list', component: EmailComponent},\n      {path: 'featured', component: FeaturedComponent},\n    ], canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AccountComponent,\n    MyPropertiesComponent,\n    FavoritesComponent,\n    ProfileComponent,\n    EditPropertyComponent,\n    SecurityComponent,\n    HousingunitComponent,\n    AddHunitComponent,\n    SingleUnitComponent,\n    FeaturedComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    InputFileModule,\n    AgmCoreModule,\n    SubmitPropertyModule,\n  ],\n  providers: [HunitService],\n})\nexport class AccountModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".edit-property .sebm-google-map-container {\\n  height: 400px;\\n}\\n.edit-property .step-section {\\n  padding: 20px 10px 0;\\n  border-radius: 4px;\\n  margin: 8px 8px 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9lZGl0LXByb3BlcnR5L2VkaXQtcHJvcGVydHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxhQUFBO0FBQVI7QUFFSTtFQUNJLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtBQUFSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9lZGl0LXByb3BlcnR5L2VkaXQtcHJvcGVydHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC1wcm9wZXJ0eSB7IFxyXG4gICAgLnNlYm0tZ29vZ2xlLW1hcC1jb250YWluZXIge1xyXG4gICAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICB9IFxyXG4gICAgLnN0ZXAtc2VjdGlvbiB7XHJcbiAgICAgICAgcGFkZGluZzogMjBweCAxMHB4IDA7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgICAgIG1hcmdpbjogOHB4IDhweCAxNnB4O1xyXG4gICAgfVxyXG59Il19 */\";","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { Property } from 'src/app/app.models';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PropertyInput } from '../../properties/models/property.input';\r\nimport { PropertyInsertAction, PropertyUpdateAction } from '../../properties/store/property.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { GlobalState } from 'src/app/store/states/global.state';\r\nimport { img } from '../../properties/utils/to-formdata';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-edit-property',\r\n  templateUrl: './edit-property.component.html',\r\n  styleUrls: ['./edit-property.component.scss'],\r\n})\r\nexport class EditPropertyComponent implements OnInit {\r\n  constructor(public appService: AppService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private fb: FormBuilder,\r\n              private mapsAPILoader: MapsAPILoader,\r\n              private ngZone: NgZone,\r\n              private location: Location,\r\n              private snackBar: MatSnackBar, private store: Store<GlobalState>) { }\r\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef;\r\n  private sub: any;\r\n  public property: Property;\r\n  public submitForm: FormGroup;\r\n  public features = [];\r\n  public propertyTypes = [];\r\n  public propertyStatuses = [];\r\n  public cities = [];\r\n  public neighborhoods = [];\r\n  public streets = [];\r\n  public lat = 40.678178;\r\n  public lng = -73.944158;\r\n  public zoom = 12;\r\n  public city = '';\r\n\r\n  public step = 0;\r\n\r\n  public goBack() {\r\n    this.location.back();\r\n  }\r\n  ngOnInit() {\r\n    this.features = this.appService.getFeatures();\r\n    this.propertyTypes = this.appService.getPropertyTypes();\r\n    this.propertyStatuses = this.appService.getPropertyStatuses();\r\n    this.cities = this.appService.getCities();\r\n    this.neighborhoods = this.appService.getNeighborhoods();\r\n    this.streets = this.appService.getStreets();\r\n\r\n    this.submitForm = this.fb.group({\r\n      basic: this.fb.group({\r\n        title: [null, Validators.required],\r\n        desc: null,\r\n        shortDesc: null,\r\n        priceDollar: null,\r\n        priceEuro: null,\r\n        propertyType: [null, Validators.required],\r\n        propertyStatus: null,\r\n        gallery: null,\r\n      }),\r\n      address: this.fb.group({\r\n        location: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        zipCode: '',\r\n        neighborhood: '',\r\n        street: '',\r\n      }),\r\n      additional: this.fb.group({\r\n        bedrooms: '',\r\n        bathrooms: '',\r\n        garages: '',\r\n        area: '',\r\n        yearBuilt: '',\r\n        features: this.buildFeatures(),\r\n      }),\r\n      media: this.fb.group({\r\n        videos: this.fb.array([ this.createVideo() ]),\r\n        plans: this.fb.array([ this.createPlan() ]),\r\n        additionalFeatures: this.fb.array([ this.createFeature() ]),\r\n        featured: false,\r\n        advertise: false,\r\n\r\n\r\n      }),\r\n    });\r\n\r\n    this.placesAutocomplete();\r\n\r\n    this.sub = this.activatedRoute.params.subscribe(params => {\r\n      this.getPropertyById(params.id);\r\n    });\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  public getPropertyById(id) {\r\n    this.appService.getPropertyById(id).subscribe(data => {\r\n      console.log(data);\r\n      this.property = data;\r\n\r\n      this.submitForm.controls.basic.get('title').setValue(this.property.title);\r\n      this.submitForm.controls.basic.get('desc').setValue(this.property.desc);\r\n      this.submitForm.controls.basic.get('shortDesc').setValue(this.property.shortDesc);\r\n      this.submitForm.controls.basic.get('priceDollar').setValue((this.property.priceDollar.sale) ? this.property.priceDollar.sale : this.property.priceDollar.rent);\r\n      this.submitForm.controls.basic.get('priceEuro').setValue((this.property.priceEuro.sale) ? this.property.priceEuro.sale : this.property.priceEuro.rent);\r\n      this.submitForm.controls.basic.get('propertyType').setValue( this.propertyTypes.filter(p => p.name == this.property.propertyType)[0]);\r\n      this.submitForm.controls.additional.get('bedrooms').setValue(this.property.bedrooms);\r\n      this.submitForm.controls.additional.get('bathrooms').setValue(this.property.bathrooms);\r\n      this.submitForm.controls.additional.get('garages').setValue(this.property.garages);\r\n      this.submitForm.controls.additional.get('area').setValue(this.property.area.value);\r\n      this.submitForm.controls.additional.get('yearBuilt').setValue(this.property.yearBuilt);\r\n      this.submitForm.controls.address.get('city').setValue({id: 1, name: this.property.city});\r\n      this.submitForm.controls.address.get('zipCode').setValue(this.property.zipCode);\r\n      this.submitForm.controls.address.get('street').setValue(this.property.street);\r\n      this.city = this.property.city;\r\n\r\n\r\n      const statusList: any[] = [];\r\n      this.propertyStatuses.forEach(status => {\r\n        this.property.propertyStatus.forEach(name => {\r\n          if (status.name == name) {\r\n            statusList.push(status);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.submitForm.controls.basic.get('propertyStatus').setValue(statusList);\r\n\r\n      const images: any[] = [];\r\n      this.property.gallery.forEach(item => {\r\n        const image = {\r\n          link: item.medium,\r\n          preview: img(item.medium),\r\n        };\r\n        images.push(image);\r\n      });\r\n      this.submitForm.controls.basic.get('gallery').setValue(images);\r\n\r\n      this.submitForm.controls.address.get('location').setValue(this.property.formattedAddress);\r\n      this.lat = this.property?.location != null ? this.property.location.lat : 0;\r\n      this.lng = this.property?.location != null ? this.property.location.lng : 0;\r\n      // this.getAddress();\r\n\r\n\r\n      this.features.forEach(feature => {\r\n        this.property.features.forEach(name => {\r\n          if (feature.name == name) {\r\n            feature.selected = true;\r\n          }\r\n        });\r\n      });\r\n      this.submitForm.controls.additional.get('features').setValue(this.features);\r\n\r\n\r\n      const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n      while (videos.length) {\r\n        videos.removeAt(0);\r\n      }\r\n      this.property.videos.forEach(video => videos.push(this.fb.group(video)));\r\n\r\n      const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n      while (plans.length) {\r\n        plans.removeAt(0);\r\n      }\r\n      this.property.plans.forEach(plan => {\r\n        const p = {\r\n          id: plan.id,\r\n          name: plan.name,\r\n          desc: plan.desc,\r\n          area: plan.area.value,\r\n          rooms: plan.rooms,\r\n          baths: plan.baths,\r\n          image: null,\r\n        };\r\n        plans.push(this.fb.group(p));\r\n      });\r\n      this.property.plans.forEach((plan, index) => {\r\n        const image = {\r\n          link: plan.image,\r\n          preview: plan.image,\r\n        };\r\n        (this.submitForm.controls.media.get('plans') as any).controls[index].controls.image.setValue([image]);\r\n      });\r\n\r\n      const additionalFeatures = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n      while (additionalFeatures.length) {\r\n        additionalFeatures.removeAt(0);\r\n      }\r\n      this.property.additionalFeatures.forEach(feature => additionalFeatures.push(this.fb.group(feature)));\r\n\r\n      this.submitForm.controls.media.get('featured').setValue(this.property.featured);\r\n      this.submitForm.controls.media.get('advertise').setValue(this.property.advertise);\r\n\r\n\r\n    });\r\n  }\r\n\r\n\r\n  // -------------------- Address ---------------------------\r\n  public onSelectCity() {\r\n    this.submitForm.controls.address.get('neighborhood').setValue(null, {emitEvent: false});\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\r\n  }\r\n  public onSelectNeighborhood() {\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n      });\r\n    }\r\n  }\r\n\r\n  private placesAutocomplete() {\r\n    this.mapsAPILoader.load().then(() => {\r\n      const autocomplete = new google.maps.places.Autocomplete(this.addressAutocomplete.nativeElement, {\r\n        types: ['address'],\r\n      });\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.lat = place.geometry.location.lat();\r\n          this.lng = place.geometry.location.lng();\r\n          this.getAddress();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  public getAddress() {\r\n    this.appService.getAddress(this.lat, this.lng).subscribe(response => {\r\n      const responseResult: any = response as any;\r\n      const address = responseResult.results[0].formatted_address;\r\n      this.submitForm.controls.address.get('location').setValue(address);\r\n      this.setAddresses(responseResult.results[0]);\r\n    });\r\n  }\r\n\r\n  public onMapClick(e: any) {\r\n    this.lat = e.coords.lat;\r\n    this.lng = e.coords.lng;\r\n    this.getAddress();\r\n  }\r\n  public onMarkerClick(e: any) {\r\n    console.log(e);\r\n  }\r\n\r\n  public setAddresses(result) {\r\n    alert(';');\r\n    this.submitForm.controls.address.get('city').setValue(null);\r\n    this.submitForm.controls.address.get('zipCode').setValue(null);\r\n    this.submitForm.controls.address.get('street').setValue(null);\r\n\r\n    let newCity, newStreet, newNeighborhood;\r\n\r\n    result.address_components.forEach(item => {\r\n      if (item.types.indexOf('locality') > -1) {\r\n        if (this.cities.filter(city => city.name == item.long_name)[0]) {\r\n          newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n        } else {\r\n          newCity = { id: this.cities.length + 1, name: item.long_name };\r\n          this.cities.push(newCity);\r\n        }\r\n        this.submitForm.controls.address.get('city').setValue(newCity);\r\n      }\r\n      if (item.types.indexOf('postal_code') > -1) {\r\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name);\r\n      }\r\n    });\r\n\r\n    if (!newCity) {\r\n      result.address_components.forEach(item => {\r\n        if (item.types.indexOf('administrative_area_level_1') > -1) {\r\n          if (this.cities.filter(city => city.name == item.long_name)[0]) {\r\n            newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n          } else {\r\n            newCity = {\r\n              id: this.cities.length + 1,\r\n              name: item.long_name,\r\n            };\r\n            this.cities.push(newCity);\r\n          }\r\n          this.submitForm.controls.address.get('city').setValue(newCity);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (newCity) {\r\n      result.address_components.forEach(item => {\r\n        if (item.types.indexOf('neighborhood') > -1) {\r\n          const neighborhood = this.neighborhoods.filter(n => n.name == item.long_name && n.cityId == newCity.id)[0];\r\n          if (neighborhood) {\r\n            newNeighborhood = neighborhood;\r\n          } else {\r\n            newNeighborhood = {\r\n              id: this.neighborhoods.length + 1,\r\n              name: item.long_name,\r\n              cityId: newCity.id,\r\n            };\r\n            this.neighborhoods.push(newNeighborhood);\r\n          }\r\n          this.neighborhoods = [...this.neighborhoods];\r\n          this.submitForm.controls.address.get('neighborhood').setValue([newNeighborhood]);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (newCity) {\r\n      result.address_components.forEach(item => {\r\n        if (item.types.indexOf('route') > -1) {\r\n          if (this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0]) {\r\n            newStreet = this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0];\r\n          } else {\r\n            newStreet = {\r\n              id: this.streets.length + 1,\r\n              name: item.long_name,\r\n              cityId: newCity.id,\r\n              neighborhoodId: (newNeighborhood) ? newNeighborhood.id : null,\r\n            };\r\n            this.streets.push(newStreet);\r\n          }\r\n          this.streets = [...this.streets];\r\n          this.submitForm.controls.address.get('street').setValue([newStreet]);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // -------------------- Additional ---------------------------\r\n  public buildFeatures() {\r\n    const arr = this.features.map(feature => {\r\n      return this.fb.group({\r\n        id: feature.id,\r\n        name: feature.name,\r\n        selected: feature.selected,\r\n      });\r\n    });\r\n    return this.fb.array(arr);\r\n  }\r\n\r\n  // -------------------- Media ---------------------------\r\n  public createVideo(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      link: null,\r\n    });\r\n  }\r\n\r\n  public addVideo(): void {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.push(this.createVideo());\r\n  }\r\n\r\n  public deleteVideo(index) {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.removeAt(index);\r\n  }\r\n\r\n  public createPlan(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      desc: null,\r\n      area: null,\r\n      rooms: null,\r\n      baths: null,\r\n      image: null,\r\n    });\r\n  }\r\n\r\n  public addPlan(): void {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.push(this.createPlan());\r\n  }\r\n\r\n  public deletePlan(index) {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.removeAt(index);\r\n  }\r\n\r\n  public createFeature(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      value: null,\r\n    });\r\n  }\r\n\r\n  public addFeature(): void {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.push(this.createFeature());\r\n  }\r\n\r\n  public deleteFeature(index) {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.removeAt(index);\r\n  }\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  public uploadProperty() {\r\n    const propertyInput: PropertyInput = this.submitForm.value;\r\n    propertyInput._id = this.property._id;\r\n    this.store.dispatch(new PropertyUpdateAction(propertyInput));\r\n  }\r\n\r\n  onSubmitForm(form) {\r\n    if (this.submitForm.get(form).valid) {\r\n      this.nextStep();\r\n      if (form == 'media') {\r\n        this.uploadProperty();\r\n        this.snackBar.open('The property \"' + this.property.title + '\" has been updated.', '×', {\r\n          verticalPosition: 'top',\r\n          duration: 5000,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmF2b3JpdGVzL2Zhdm9yaXRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'actions' ];\r\n  dataSource: MatTableDataSource<Property>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  \r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.appService.Data.favorites);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public remove(property:Property) {\r\n    const index: number = this.dataSource.data.indexOf(property);    \r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<Property>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    } \r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","export default \".test {\\n  border-radius: 10px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9mZWF0dXJlZC9mZWF0dXJlZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2ZlYXR1cmVkL2ZlYXR1cmVkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlc3R7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4O1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Property } from 'src/app/app.models';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Pgroup } from 'src/app/shared/pgroup/models/pgroup';\nimport { AppService } from 'src/app/app.service';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { selectPropertyTotal } from '../../properties/store/property.selectors';\nimport { selectAllPgroup } from 'src/app/shared/pgroup/store/pgroup.selectors';\nimport { map } from 'rxjs/operators';\nimport { PgroupLoadAction } from 'src/app/shared/pgroup/store/pgroup.actions';\nimport { PropertyLoadAction, PropertyDeleteAction } from '../../properties/store/property.actions';\nimport { img } from '../../properties/utils/to-formdata';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-featured',\n  templateUrl: './featured.component.html',\n  styleUrls: ['./featured.component.scss']\n})\nexport class FeaturedComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions' ];\n  dataSource: MatTableDataSource<Property>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  public total = 0;\n  public pgroupId = '';\npublic viewType = 'grid';\n  public viewCol = 33.3;\n  public count = 8;\n  public watcher: Subscription;\n  public properties: Property[] = [];\n  public pgroup: Pgroup =  {title: 'Properties'};\n\n  constructor(public appService: AppService,\n              private store: Store<GlobalState>,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private mediaObserver: MediaObserver,\n     ) {\n\n     this.watcher =   mediaObserver.media$.subscribe((change: MediaChange) => {\n        // console.log(change)\n        if (change.mqAlias == 'xs') {\n          this.viewCol = 100;\n        }\n        else if (change.mqAlias == 'sm'){\n          this.viewCol = 50;\n        }\n        else if (change.mqAlias == 'md'){\n          this.viewCol = 33.3;\n        }\n        else{\n          this.viewCol = 33.3;\n         // this.viewCol = 25;\n        }\n      });\n      }\n\n  ngOnInit() {\n      this.appService.getProperties().subscribe(data => {\n        this.dataSource = new MatTableDataSource(data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.properties = data;\n      });\n\n      this.store.pipe(select(selectPropertyTotal)).subscribe(total => {\n        this.total = total;\n       });\n\n      this.activatedRoute.params.subscribe(params => {\n        this.loadProperties({page: 1, limit: 10, pgroup: params.id});\n        this.pgroupId = params.id;\n        this.store.pipe(select(selectAllPgroup))\n        .pipe(map(properties => properties.find(x => x._id === this.pgroupId)))\n         .subscribe(item => { if (item){this.pgroup = item; }});\n        this.store.dispatch(new PgroupLoadAction({_id: this.pgroupId}));\n       });\n      this.store.dispatch(new PropertyLoadAction({page: 1, limit: 10}));\n\n  }\n\n  public loadProperties(data){\n    this.store.dispatch(new PropertyLoadAction(data));\n  }\n\n\n  public remove(property: Property) {\n    this.store.dispatch(new PropertyDeleteAction(property));\n    const index: number = this.dataSource.data.indexOf(property);\n    if (index !== -1) {\n      this.dataSource.data.splice(index, 1);\n      this.dataSource = new MatTableDataSource<Property>(this.dataSource.data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\npublic img(url: string){\n   return img(url);\n}\n\nngOnDestroy() {\n  this.watcher.unsubscribe();\n}\n}\n","export default \".btn-padding {\\n  padding: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC9hZGQtaHVuaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2hvdXNpbmd1bml0L2hvdXNpbmd1bml0L2FkZC1odW5pdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tcGFkZGluZ3tcbiAgICBwYWRkaW5nOiA4cHg7XG59Il19 */\";","export default \".btn-padding {\\n  padding: 8px;\\n}\\n\\n.slide-item {\\n  background-size: cover;\\n  background-position: center;\\n}\\n\\n.header-banner {\\n  margin-bottom: 16px;\\n}\\n\\n@media screen and (max-width: 960px) {\\n  .mat-table {\\n    border: 0;\\n    vertical-align: middle;\\n    font-size: small !important;\\n  }\\n\\n  .mat-cell.mat-icon {\\n    font-size: 30px;\\n    margin-right: 16px !important;\\n  }\\n\\n  .actions {\\n    background: wheat;\\n  }\\n\\n  .table-wrapper {\\n    display: block;\\n    overflow-x: auto;\\n    overflow-y: scroll;\\n    height: 549px;\\n  }\\n  .table-wrapper .mat-icon {\\n    font-size: 30px;\\n    margin-right: 60px !important;\\n    color: white;\\n  }\\n\\n  .mat-table caption {\\n    font-size: 1em;\\n  }\\n\\n  .mat-header-row {\\n    display: none;\\n  }\\n\\n  .mat-table .mat-header-cell {\\n    border: 10px solid;\\n    clip: rect(0 0 0 0);\\n    height: 1px;\\n    margin: -1px;\\n    padding: 0;\\n    position: absolute;\\n    width: 1px;\\n  }\\n\\n  .mat-table .mat-row {\\n    display: block;\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n    border-radius: 6px;\\n    transition: 0.3s;\\n    margin: 8px;\\n    padding: 4px;\\n  }\\n\\n  /*\\n  .mat-table .mat-row:nth-child(even) {background: #CCC}\\n  .mat-table .mat-row:nth-child(odd) {background: #FFF}\\n  */\\n  .mat-table .mat-cell {\\n    display: block;\\n    font-size: 1em;\\n    text-align: left;\\n    height: 30px;\\n    padding-left: 38px;\\n    margin-bottom: 0%;\\n  }\\n\\n  .mat-table .mat-cell:before {\\n    /*\\n    * aria-label has no advantage, it won't be read inside a table\\n    content: attr(aria-label);\\n    */\\n    content: attr(data-label);\\n    float: left;\\n    text-transform: uppercase;\\n    font-weight: normal;\\n    font-size: 0.85em;\\n  }\\n\\n  .mat-table .mat-cell:last-child {\\n    border-top: 1px solid #c3b574;\\n    background: #c3b574;\\n  }\\n\\n  .mat-table .mat-cell:first-child {\\n    margin-top: 9%;\\n  }\\n\\n  .mat-row::after {\\n    display: flex !important;\\n    min-height: 0px !important;\\n    content: \\\"\\\";\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSjs7QUFDQTtFQUNJLHNCQUFBO0VBQ0EsMkJBQUE7QUFFSjs7QUFBQTtFQUNJLG1CQUFBO0FBR0o7O0FBQUE7RUFDSTtJQUNJLFNBQUE7SUFDQSxzQkFBQTtJQUNBLDJCQUFBO0VBR047O0VBQUU7SUFDSSxlQUFBO0lBQ0EsNkJBQUE7RUFHTjs7RUFBRTtJQUNJLGlCQUFBO0VBR047O0VBQ0U7SUFDSSxjQUFBO0lBQ0EsZ0JBQUE7SUFDQSxrQkFBQTtJQUNBLGFBQUE7RUFFTjtFQUFNO0lBQ0ksZUFBQTtJQUNBLDZCQUFBO0lBQ0EsWUFBQTtFQUVWOztFQUdFO0lBQ0ksY0FBQTtFQUFOOztFQUdFO0lBQ0ksYUFBQTtFQUFOOztFQUlFO0lBQ0ksa0JBQUE7SUFDQSxtQkFBQTtJQUNBLFdBQUE7SUFDQSxZQUFBO0lBQ0EsVUFBQTtJQUNBLGtCQUFBO0lBQ0EsVUFBQTtFQUROOztFQUlFO0lBRUksY0FBQTtJQUNBLDBDQUFBO0lBQ0Esa0JBQUE7SUFDQSxnQkFBQTtJQUNBLFdBQUE7SUFDQSxZQUFBO0VBRk47O0VBS0U7OztHQUFBO0VBSUE7SUFDSSxjQUFBO0lBQ0EsY0FBQTtJQUNBLGdCQUFBO0lBQ0EsWUFBQTtJQUNBLGtCQUFBO0lBQ0EsaUJBQUE7RUFGTjs7RUFLRTtJQUNJOzs7S0FBQTtJQUlBLHlCQUFBO0lBQ0EsV0FBQTtJQUNBLHlCQUFBO0lBQ0EsbUJBQUE7SUFFQSxpQkFBQTtFQUhOOztFQU1FO0lBQ0ksNkJBQUE7SUFDQSxtQkFBQTtFQUhOOztFQU9FO0lBQ0ksY0FBQTtFQUpOOztFQU9FO0lBQ0ksd0JBQUE7SUFDQSwwQkFBQTtJQUNBLFdBQUE7RUFKTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tcGFkZGluZ3tcbiAgICBwYWRkaW5nOiA4cHg7XG59XG4uc2xpZGUtaXRlbXtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsgICAgICBcbn1cbi5oZWFkZXItYmFubmVye1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk2MHB4KSB7XG4gICAgLm1hdC10YWJsZSB7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5tYXQtY2VsbC5tYXQtaWNvbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLmFjdGlvbnMge1xuICAgICAgICBiYWNrZ3JvdW5kOiB3aGVhdDtcbiAgICB9XG5cblxuICAgIC50YWJsZS13cmFwcGVyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICAgICAgaGVpZ2h0OiA1NDlweDtcblxuICAgICAgICAubWF0LWljb24ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICBcbiAgICB9XG5cbiAgICAubWF0LXRhYmxlIGNhcHRpb24ge1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICB9XG5cbiAgICAubWF0LWhlYWRlci1yb3cge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuXG4gICAgLm1hdC10YWJsZSAubWF0LWhlYWRlci1jZWxsIHtcbiAgICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkO1xuICAgICAgICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgbWFyZ2luOiAtMXB4O1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxcHg7XG4gICAgfVxuXG4gICAgLm1hdC10YWJsZSAubWF0LXJvdyB7XG5cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjNzO1xuICAgICAgICBtYXJnaW46IDhweDtcbiAgICAgICAgcGFkZGluZzogNHB4O1xuICAgIH1cblxuICAgIC8qXG4gICAgLm1hdC10YWJsZSAubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge2JhY2tncm91bmQ6ICNDQ0N9XG4gICAgLm1hdC10YWJsZSAubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7YmFja2dyb3VuZDogI0ZGRn1cbiAgICAqL1xuICAgIC5tYXQtdGFibGUgLm1hdC1jZWxsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMzhweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCU7XG4gICAgfVxuXG4gICAgLm1hdC10YWJsZSAubWF0LWNlbGw6YmVmb3JlIHtcbiAgICAgICAgLypcbiAgICAgICogYXJpYS1sYWJlbCBoYXMgbm8gYWR2YW50YWdlLCBpdCB3b24ndCBiZSByZWFkIGluc2lkZSBhIHRhYmxlXG4gICAgICBjb250ZW50OiBhdHRyKGFyaWEtbGFiZWwpO1xuICAgICAgKi9cbiAgICAgICAgY29udGVudDogYXR0cihkYXRhLWxhYmVsKTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cbiAgICAgICAgZm9udC1zaXplOiAuODVlbTtcbiAgICB9XG5cbiAgICAubWF0LXRhYmxlIC5tYXQtY2VsbDpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjM2I1NzQ7XG4gICAgICAgIGJhY2tncm91bmQ6ICNjM2I1NzQ7XG5cbiAgICB9XG5cbiAgICAubWF0LXRhYmxlIC5tYXQtY2VsbDpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDklO1xuICAgIH1cbiBcbiAgICAubWF0LXJvdzo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cbn0iXX0= */\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Hunit } from '../models/hunit';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AppService } from 'src/app/app.service';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { HunitLoadAction, HunitDeleteAction, HunitInsertAction, HunitUpdateAction } from '../store/hunit.actions';\nimport { selectHunitTotal, selectAllHunit } from 'src/app/pages/account/housingunit/store/hunit.selectors';\nimport { img } from 'src/app/pages/properties/utils/to-formdata';\nimport { HunitService } from '../services/hunit.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HunitParams } from '../models/hunit.params';\nimport { Property } from 'src/app/app.models';\nimport { PropertyLoad } from 'src/app/pages/properties/models/property.load';\nimport { PropertyLoadAction } from 'src/app/pages/properties/store/property.actions';\n\n@Component({\n  selector: 'app-housingunit',\n  templateUrl: './housingunit.component.html',\n  styleUrls: ['./housingunit.component.scss']\n})\nexport class HousingunitComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'hnumber', 'status', 'balance', 'actions' ];\n  dataSource: MatTableDataSource<Hunit>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  public total = 0;\n  public hunit: Hunit = {};\n  private propertyId: string;\n  public property: Property = {};\n\n  constructor(public appService: AppService,\n              private store: Store<GlobalState>,\n              private hunitService: HunitService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.store.pipe(select(selectAllHunit)).subscribe(data => {\n        this.dataSource = new MatTableDataSource(data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n\n\n    this.store.pipe(select(selectHunitTotal)).subscribe(total => {\n        this.total = total;\n       });\n\n\n    this.activatedRoute.params.subscribe(params => {\n      this.propertyId = params.id;\n      this.loadHunit({page: 1, limit: 10, property: params.id});\n\n      this.appService.getPropertyById(params.id).subscribe(property => {\n        if (property){\n          this.property = property;\n        }\n\n      });\n    });\n\n  }\n\npublic loadHunit(data){\n   this.store.dispatch(new HunitLoadAction(data));\n  }\n\n  public remove(hunit: Hunit) {\n\n    this.store.dispatch(new HunitDeleteAction({hunit}));\n    const index: number = this.dataSource.data.indexOf(hunit);\n    if (index !== -1) {\n      this.dataSource.data.splice(index, 1);\n      this.dataSource = new MatTableDataSource<Hunit>(this.dataSource.data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\npublic img(url: string){\n  if (url){\n    return img(url);\n  }\n  return '';\n\n}\n\npublic check(property): string{\n  if ( property && property.gallery){\n    return property.gallery[0].medium;\n  }else{\n    return null;\n  }\n}\n\nopenEditDialog(hunit: Hunit): void {\n  const dialogRef = this.dialog.open(AddHunitComponent, {\n    width: '500px',\n    data: hunit\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n\n    this.hunit = result;\n    this.hunit._id = hunit._id;\n    this.hunit.propertyId = this.propertyId;\n    const hunitParams =  { hunit: this.hunit} as HunitParams;\n    this.store.dispatch(new HunitUpdateAction(hunitParams));\n\n  });\n}\n\nopenDialog(): void {\n  const dialogRef = this.dialog.open(AddHunitComponent, {\n    width: '500px',\n    data: this.hunit\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    this.hunit = result;\n    this.hunit.propertyId = this.propertyId;\n    const hunitParams =  { hunit: this.hunit} as HunitParams;\n    this.store.dispatch(new HunitInsertAction(hunitParams));\n\n  });\n}\n\n}\n\n@Component({\n  selector: 'app-add-hunit',\n  templateUrl: './add-hunit.component.html',\n  styleUrls: ['./add-hunit.component.scss']\n})\nexport class AddHunitComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<AddHunitComponent>,\n    public formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA)\n    public data: Hunit) {\n\n    }\n    public title = 'Add Housing units';\n    public status = [\n      { id: 1, name: 'VACCANT' },\n      { id: 2, name: 'TAKEN' },\n      { id: 3, name: 'BOOKED' }\n    ];\n    public type =  { id: 1, name: 'VACCANT' };\n    public infoForm: FormGroup;\n\n  public closeDialog(){\n    this.dialogRef.close();\n  }\n  public onInfoFormSubmit(hunit: Hunit){\n    if (this.infoForm.valid){\n      this.data = hunit;\n      this.dialogRef.close();\n\n    }\n\n  }\n\n  ngOnInit(): void {\n\n    this.infoForm = this.formBuilder.group({\n      status: ['', Validators.required],\n      hnumber: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      floor: [''],\n      description: [''],\n\n    });\n    if (this.data._id){\n      this.title = 'Edit Housing unit ' +   this.data.hnumber;\n      this.infoForm.patchValue(this.data);\n      this.type =   { id: 1, name: this.data.status };\n    }\n\n  }\n\n}\n\n","export default \".title {\\n  font-weight: bold;\\n  font-size: large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ob3VzaW5ndW5pdC9ob3VzaW5ndW5pdC9zaW5nbGUtdW5pdC9zaW5nbGUtdW5pdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaG91c2luZ3VuaXQvaG91c2luZ3VuaXQvc2luZ2xlLXVuaXQvc2luZ2xlLXVuaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGV7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiBsYXJnZTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { Store, select } from '@ngrx/store';\nimport { HunitLoadAction } from '../../store/hunit.actions';\nimport { ActivatedRoute } from '@angular/router';\nimport { selectAllHunit } from '../../store/hunit.selectors';\nimport { map } from 'rxjs/operators';\nimport { Hunit } from '../../models/hunit';\n\n@Component({\n  selector: 'app-single-unit',\n  templateUrl: './single-unit.component.html',\n  styleUrls: ['./single-unit.component.scss']\n})\nexport class SingleUnitComponent implements OnInit {\n\n  constructor( private store: Store<GlobalState>, private activatedRoute: ActivatedRoute) { }\n  public hunit: Hunit = {};\n  ngOnInit(): void {\n\n\n  this.activatedRoute.params.subscribe(params => {\n    this.store.pipe(select(selectAllHunit)).pipe(map(hunits => hunits.find(x => x._id === params.id))).subscribe(unit => {\n    if  (unit){\n        this.hunit = unit;\n    }\n    });\n    this.store.dispatch(new HunitLoadAction({_id: params.id}));\n  });\n\n  }\n\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { hunitAdapter, HunitState } from './hunit.state';\n\n\nexport const {\n  selectIds: _selectHunitDataIds,\n  selectEntities: _selectHunitEntities,\n  selectAll: _selectAllHunit,\n  selectTotal: _selectHunitTotal,\n} = hunitAdapter.getSelectors();\n\nexport const selectHunitState = createFeatureSelector<HunitState>('hunit');\n\nexport const selectHunitIds = createSelector(\n  selectHunitState,\n  _selectHunitDataIds,\n);\n\nexport const selectHunitEntities = createSelector(\n  selectHunitState,\n  _selectHunitEntities,\n);\n\nexport const selectAllHunit = createSelector(\n  selectHunitState,\n  _selectAllHunit,\n);\n\nexport const selectHunitError = createSelector(\n  selectHunitState,\n  (state: HunitState): boolean => state.error,\n);\n\nexport const selectHunitLoading = createSelector(\n  selectHunitState,\n  (state: HunitState): boolean => state.loading,\n);\n\nexport const selectHunitTotal = createSelector(\n  selectHunitState,\n  (state: HunitState): number => state.total,\n);\n","export default \".test {\\n  border-radius: 10px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9teS1wcm9wZXJ0aWVzL215LXByb3BlcnRpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3QkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9teS1wcm9wZXJ0aWVzL215LXByb3BlcnRpZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGVzdHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4IDEwcHg7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property, Pagination } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { GlobalState } from 'src/app/store/states/global.state';\r\nimport { selectAllProperty, selectPropertyTotal } from '../../properties/store/property.selectors';\r\nimport { PropertyLoadAction, PropertyDeleteAction } from '../../properties/store/property.actions';\r\nimport { img } from '../../properties/utils/to-formdata';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { selectAllPgroup } from 'src/app/shared/pgroup/store/pgroup.selectors';\r\nimport { map } from 'rxjs/operators';\r\nimport { Pgroup } from 'src/app/shared/pgroup/models/pgroup';\r\nimport { PgroupLoadAction } from 'src/app/shared/pgroup/store/pgroup.actions';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './my-properties.component.html',\r\n  styleUrls: ['./my-properties.component.scss']\r\n})\r\nexport class MyPropertiesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions' ];\r\n  dataSource: MatTableDataSource<Property>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  public total = 0;\r\n  public pgroupId = '';\r\n  public pgroup: Pgroup =  {title: 'Properties'};\r\n\r\n  constructor(public appService: AppService,\r\n              private store: Store<GlobalState>,\r\n              private activatedRoute: ActivatedRoute,\r\n              private router: Router\r\n     ) { }\r\n\r\n  ngOnInit() {\r\n      this.appService.getProperties().subscribe(data => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n\r\n      this.store.pipe(select(selectPropertyTotal)).subscribe(total => {\r\n        this.total = total;\r\n       });\r\n      this.activatedRoute.params.subscribe(params => {\r\n        this.loadProperties({page: 1, limit: 10, pgroup: params.id});\r\n        this.pgroupId = params.id;\r\n        this.store.pipe(select(selectAllPgroup))\r\n        .pipe(map(properties => properties.find(x => x._id === this.pgroupId)))\r\n         .subscribe(item => { if (item){this.pgroup = item; }});\r\n        this.store.dispatch(new PgroupLoadAction({_id: this.pgroupId}));\r\n       });\r\n\r\n  }\r\n\r\n  public loadProperties(data){\r\n    this.store.dispatch(new PropertyLoadAction(data));\r\n  }\r\n\r\n\r\n  public remove(property: Property) {\r\n    this.store.dispatch(new PropertyDeleteAction(property));\r\n    const index: number = this.dataSource.data.indexOf(property);\r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index, 1);\r\n      this.dataSource = new MatTableDataSource<Property>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\npublic img(url: string){\r\n   return img(url);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { emailValidator, matchingPasswords } from 'src/app/theme/utils/app-validators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { User } from '../../register/models/user';\nimport { Store, select } from '@ngrx/store';\nimport { GlobalState } from 'src/app/store/states/global.state';\nimport { selectCurrentUser } from '../../register/store/user.selectors';\nimport { UserUpdateAction, UserLogoutAction } from '../../register/store/user.actions';\nimport { UserParams } from '../../register/models/user-params';\nimport { AuthService } from '../../register/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  public infoForm: FormGroup;\n  public user: User;\n  constructor(public formBuilder: FormBuilder,\n              public snackBar: MatSnackBar,\n              public authService: AuthService,\n              private router: Router,\n              private store: Store<GlobalState>) { }\n  public userTypes = [\n    { id: 1, name: 'Agent' },\n    { id: 2, name: 'Agency' },\n    { id: 3, name: 'Buyer' },\n    { id: 7, name: 'Seller' },\n    { id: 4, name: 'LandLord' },\n    { id: 5, name: 'CareTaker' },\n    { id: 6, name: 'Tenant' },\n  ];\n  ngOnInit() {\n    this.infoForm = this.formBuilder.group({\n      userType: ['', Validators.required],\n      fullName: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      phone: ['', Validators.required],\n      idNumber: [''],\n      image: null,\n      receiveNewsletter: false,\n      organization: null,\n\n    });\n\n    this.store.pipe(select(selectCurrentUser)).subscribe(user => this.checkUser(user) );\n  }\n  private checkUser(user: User){\n    this.user = user;\n    this.infoForm.patchValue(user);\n  }\n\n  public logOut(){\n    this.authService.logout();\n    this.store.dispatch(new UserLogoutAction());\n    this.router.navigate(['/login']);\n  }\n\n  public onInfoFormSubmit(values: Object): void {\n    if (this.infoForm.valid) {\n      console.log(values);\n      const user = values as User;\n      user.userType = (values as any).userType.name;\n      user._id = this.user._id;\n\n      let file: File = null;\n      if ((values as any).image) {\n      file = ((values as any).image[0].file) as File;\n      }\n      const userParams =  { user, file} as UserParams;\n      this.store.dispatch(new UserUpdateAction(userParams));\n      this.snackBar\n      .open('Your account information updated successfully!',\n      'cancel', { panelClass: 'success', verticalPosition: 'bottom', duration: 3000 });\n    }\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2VjdXJpdHkvc2VjdXJpdHkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { matchingPasswords } from 'src/app/theme/utils/app-validators';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.component.html',\n  styleUrls: ['./security.component.scss']\n})\nexport class SecurityComponent implements OnInit {\n\n  constructor(public formBuilder: FormBuilder) { }\n  public passwordForm: FormGroup;\n  ngOnInit(): void {\n    this.passwordForm = this.formBuilder.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmNewPassword: ['', Validators.required]\n    }, {validator: matchingPasswords('newPassword', 'confirmNewPassword')});\n  }\n\n  public onPasswordFormSubmit(values: Object): void {\n    if (this.passwordForm.valid) {\n\n    }\n  }\n}\n"]}